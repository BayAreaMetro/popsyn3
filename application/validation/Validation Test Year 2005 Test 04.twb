<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='year_2005_test_04' inline='true' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Documents/GitHub/popsyn3/application/validation' filename='year_2005_test_04.csv' password='' server=''>
        <relation name='year_2005_test_04.csv' table='[year_2005_test_04#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='geography_index' ordinal='0' />
            <column datatype='real' name='control_households' ordinal='1' />
            <column datatype='string' name='measure' ordinal='2' />
            <column datatype='integer' name='synthesized_households' ordinal='3' />
            <column datatype='string' name='geography' ordinal='4' />
            <column datatype='real' name='control_persons' ordinal='5' />
            <column datatype='integer' name='synthesized_persons' ordinal='6' />
            <column datatype='string' name='control_category' ordinal='7' />
            <column datatype='string' name='measure_category' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geography_index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography_index]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>geography_index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_households</remote-name>
            <remote-type>5</remote-type>
            <local-name>[control_households]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>control_households</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_households]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>synthesized_households</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[control_persons]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>control_persons</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_persons]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>synthesized_persons</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[control_category]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>control_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure_category]</local-name>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias>measure_category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[year_2005_test_04.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' value='Control' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' value='Synthesized' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' value='Total Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' value='Control Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' value='Synthesized Households' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' value='Synthesized Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' value='Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' value='Percent Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' value='Pct RMSE' />
        </aliases>
      </column>
      <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
      </column>
      <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
      </column>
      <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
      </column>
      <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
      </column>
      <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
      </column>
      <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
      <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;county&quot;' value='County' />
          <alias key='&quot;maz&quot;' value='MAZ' />
          <alias key='&quot;taz&quot;' value='TAZ' />
        </aliases>
      </column>
      <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
          <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
          <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
          <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
          <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
          <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
          <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
          <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
          <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
          <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
          <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
          <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
          <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
          <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
          <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
          <alias key='&quot;households&quot;' value='Households' />
          <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
          <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
          <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
          <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
          <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
          <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
        </aliases>
      </column>
      <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='CountD' name='[ctd:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='CountD' name='[ctd:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
      <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\dory\Documents\GitHub\popsyn3\application\validation\year_2005_test_04.tde' schema='Extract' tablename='Extract' update-time='10/20/2016 06:02:44 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1000925085773357056]' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            <calculation column='[Calculation_1000925085783777281]' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            <calculation column='[Calculation_1021754165723889665]' formula='IFNULL([control_households], [control_persons])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='59662' timestamp-start='2016-10-20 18:02:44.100' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085773357056</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_1000925085773357056]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085773357056</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1351</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-134113.0</statistic>
                <statistic aggregation='Max' datatype='real'>31531.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085783777281</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1000925085783777281]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085783777281</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1123</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>17986296769.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1021754165723889665</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_1021754165723889665]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1021754165723889665</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1907</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1275255.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59716.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59716.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[control_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_category</remote-alias>
              <ordinal>4</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;controlled&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;not_controlled&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;controlled&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_households</remote-name>
              <remote-type>4</remote-type>
              <local-name>[control_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_households</remote-alias>
              <ordinal>5</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>907</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>243797.0</statistic>
                <statistic aggregation='Count' datatype='integer'>58609</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_persons</remote-name>
              <remote-type>4</remote-type>
              <local-name>[control_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_persons</remote-alias>
              <ordinal>6</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1033</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>222.0</statistic>
                <statistic aggregation='Max' datatype='real'>1275255.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1053</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geography]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography</remote-alias>
              <ordinal>7</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;county&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;taz&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography_index</remote-name>
              <remote-type>3</remote-type>
              <local-name>[geography_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography_index</remote-alias>
              <ordinal>8</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39785</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>835412964.0</statistic>
                <statistic aggregation='Avg' datatype='real'>13989.767633465068</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>39785</statistic>
                <statistic aggregation='Stdev' datatype='real'>12574.58981486083</statistic>
                <statistic aggregation='StdevP' datatype='real'>12574.484527814993</statistic>
                <statistic aggregation='Var' datatype='real'>158120309.01200175</statistic>
                <statistic aggregation='VarP' datatype='real'>158117661.14025864</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21129387496996.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure</remote-alias>
              <ordinal>9</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>136</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;age_0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure_category</remote-alias>
              <ordinal>10</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Households&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Usual Work Week Hours&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59716</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_households</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_households</remote-alias>
              <ordinal>11</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>955</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>249432</statistic>
                <statistic aggregation='Count' datatype='integer'>58609</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_persons</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_persons</remote-alias>
              <ordinal>12</ordinal>
              <family>year_2005_test_04.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1031</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>133</statistic>
                <statistic aggregation='Max' datatype='integer'>1187186</statistic>
                <statistic aggregation='Count' datatype='integer'>1053</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.44586' measure-ordering='alphabetic' measure-percentage='0.55414' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:geography:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;county&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]' type='palette'>
            <map to='#7b3014'>
              <bucket>&quot;age_93&quot;</bucket>
            </map>
            <map to='#7d3012'>
              <bucket>&quot;age_92&quot;</bucket>
            </map>
            <map to='#803011'>
              <bucket>&quot;age_89&quot;</bucket>
            </map>
            <map to='#823010'>
              <bucket>&quot;age_88&quot;</bucket>
            </map>
            <map to='#85300f'>
              <bucket>&quot;age_87&quot;</bucket>
            </map>
            <map to='#88300e'>
              <bucket>&quot;age_86&quot;</bucket>
            </map>
            <map to='#8a300c'>
              <bucket>&quot;age_85&quot;</bucket>
            </map>
            <map to='#8d300b'>
              <bucket>&quot;age_84&quot;</bucket>
            </map>
            <map to='#90310a'>
              <bucket>&quot;age_83&quot;</bucket>
            </map>
            <map to='#923109'>
              <bucket>&quot;age_82&quot;</bucket>
            </map>
            <map to='#953108'>
              <bucket>&quot;age_81&quot;</bucket>
            </map>
            <map to='#983106'>
              <bucket>&quot;age_80&quot;</bucket>
            </map>
            <map to='#9a3105'>
              <bucket>&quot;age_79&quot;</bucket>
            </map>
            <map to='#9d3104'>
              <bucket>&quot;age_78&quot;</bucket>
            </map>
            <map to='#9f3103'>
              <bucket>&quot;age_77&quot;</bucket>
            </map>
            <map to='#a23102'>
              <bucket>&quot;age_76&quot;</bucket>
            </map>
            <map to='#a53201'>
              <bucket>&quot;age_75&quot;</bucket>
            </map>
            <map to='#a93401'>
              <bucket>&quot;age_74&quot;</bucket>
            </map>
            <map to='#ac3501'>
              <bucket>&quot;age_73&quot;</bucket>
            </map>
            <map to='#b03601'>
              <bucket>&quot;age_72&quot;</bucket>
            </map>
            <map to='#b33701'>
              <bucket>&quot;age_71&quot;</bucket>
            </map>
            <map to='#b73801'>
              <bucket>&quot;age_70&quot;</bucket>
            </map>
            <map to='#ba3a01'>
              <bucket>&quot;age_69&quot;</bucket>
            </map>
            <map to='#bd3b01'>
              <bucket>&quot;age_68&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;age_67&quot;</bucket>
            </map>
            <map to='#c43d01'>
              <bucket>&quot;age_66&quot;</bucket>
            </map>
            <map to='#c83e01'>
              <bucket>&quot;age_65&quot;</bucket>
            </map>
            <map to='#cb4001'>
              <bucket>&quot;age_64&quot;</bucket>
            </map>
            <map to='#cf4101'>
              <bucket>&quot;age_63&quot;</bucket>
            </map>
            <map to='#d24201'>
              <bucket>&quot;age_62&quot;</bucket>
            </map>
            <map to='#d54301'>
              <bucket>&quot;age_61&quot;</bucket>
            </map>
            <map to='#d84501'>
              <bucket>&quot;age_60&quot;</bucket>
            </map>
            <map to='#d94702'>
              <bucket>&quot;age_59&quot;</bucket>
            </map>
            <map to='#db4903'>
              <bucket>&quot;age_58&quot;</bucket>
            </map>
            <map to='#dd4b04'>
              <bucket>&quot;age_57&quot;</bucket>
            </map>
            <map to='#de4e05'>
              <bucket>&quot;age_56&quot;</bucket>
            </map>
            <map to='#e05006'>
              <bucket>&quot;age_55&quot;</bucket>
            </map>
            <map to='#e15208'>
              <bucket>&quot;age_54&quot;</bucket>
            </map>
            <map to='#e35409'>
              <bucket>&quot;age_53&quot;</bucket>
            </map>
            <map to='#e5560a'>
              <bucket>&quot;age_52&quot;</bucket>
            </map>
            <map to='#e6590b'>
              <bucket>&quot;age_51&quot;</bucket>
            </map>
            <map to='#e85b0c'>
              <bucket>&quot;age_50&quot;</bucket>
            </map>
            <map to='#ea5d0d'>
              <bucket>&quot;age_49&quot;</bucket>
            </map>
            <map to='#eb5f0e'>
              <bucket>&quot;age_48&quot;</bucket>
            </map>
            <map to='#ed610f'>
              <bucket>&quot;age_47&quot;</bucket>
            </map>
            <map to='#ef6310'>
              <bucket>&quot;age_46&quot;</bucket>
            </map>
            <map to='#f06612'>
              <bucket>&quot;age_45&quot;</bucket>
            </map>
            <map to='#f0c091'>
              <bucket>&quot;age_1&quot;</bucket>
            </map>
            <map to='#f0c294'>
              <bucket>&quot;age_0&quot;</bucket>
            </map>
            <map to='#f16814'>
              <bucket>&quot;age_44&quot;</bucket>
            </map>
            <map to='#f1be8e'>
              <bucket>&quot;age_2&quot;</bucket>
            </map>
            <map to='#f26a17'>
              <bucket>&quot;age_43&quot;</bucket>
            </map>
            <map to='#f2bd8b'>
              <bucket>&quot;age_3&quot;</bucket>
            </map>
            <map to='#f36d1a'>
              <bucket>&quot;age_42&quot;</bucket>
            </map>
            <map to='#f36f1c'>
              <bucket>&quot;age_41&quot;</bucket>
            </map>
            <map to='#f3bb88'>
              <bucket>&quot;age_4&quot;</bucket>
            </map>
            <map to='#f4721f'>
              <bucket>&quot;age_40&quot;</bucket>
            </map>
            <map to='#f4ba85'>
              <bucket>&quot;age_5&quot;</bucket>
            </map>
            <map to='#f57421'>
              <bucket>&quot;age_39&quot;</bucket>
            </map>
            <map to='#f5b882'>
              <bucket>&quot;age_6&quot;</bucket>
            </map>
            <map to='#f67624'>
              <bucket>&quot;age_38&quot;</bucket>
            </map>
            <map to='#f6b57c'>
              <bucket>&quot;age_8&quot;</bucket>
            </map>
            <map to='#f6b77f'>
              <bucket>&quot;age_7&quot;</bucket>
            </map>
            <map to='#f77926'>
              <bucket>&quot;age_37&quot;</bucket>
            </map>
            <map to='#f7b479'>
              <bucket>&quot;age_9&quot;</bucket>
            </map>
            <map to='#f87b29'>
              <bucket>&quot;age_36&quot;</bucket>
            </map>
            <map to='#f8b276'>
              <bucket>&quot;age_10&quot;</bucket>
            </map>
            <map to='#f97d2c'>
              <bucket>&quot;age_35&quot;</bucket>
            </map>
            <map to='#f9802e'>
              <bucket>&quot;age_34&quot;</bucket>
            </map>
            <map to='#f9b173'>
              <bucket>&quot;age_11&quot;</bucket>
            </map>
            <map to='#fa8231'>
              <bucket>&quot;age_33&quot;</bucket>
            </map>
            <map to='#faaf70'>
              <bucket>&quot;age_12&quot;</bucket>
            </map>
            <map to='#fb8533'>
              <bucket>&quot;age_32&quot;</bucket>
            </map>
            <map to='#fbae6d'>
              <bucket>&quot;age_13&quot;</bucket>
            </map>
            <map to='#fc8736'>
              <bucket>&quot;age_31&quot;</bucket>
            </map>
            <map to='#fcab67'>
              <bucket>&quot;age_15&quot;</bucket>
            </map>
            <map to='#fcac6a'>
              <bucket>&quot;age_14&quot;</bucket>
            </map>
            <map to='#fd8939'>
              <bucket>&quot;age_30&quot;</bucket>
            </map>
            <map to='#fd8b3c'>
              <bucket>&quot;age_29&quot;</bucket>
            </map>
            <map to='#fd8e3f'>
              <bucket>&quot;age_28&quot;</bucket>
            </map>
            <map to='#fd9042'>
              <bucket>&quot;age_27&quot;</bucket>
            </map>
            <map to='#fd9245'>
              <bucket>&quot;age_26&quot;</bucket>
            </map>
            <map to='#fd9448'>
              <bucket>&quot;age_25&quot;</bucket>
            </map>
            <map to='#fd974b'>
              <bucket>&quot;age_24&quot;</bucket>
            </map>
            <map to='#fd994e'>
              <bucket>&quot;age_23&quot;</bucket>
            </map>
            <map to='#fd9b51'>
              <bucket>&quot;age_22&quot;</bucket>
            </map>
            <map to='#fd9d54'>
              <bucket>&quot;age_21&quot;</bucket>
            </map>
            <map to='#fda058'>
              <bucket>&quot;age_20&quot;</bucket>
            </map>
            <map to='#fda25b'>
              <bucket>&quot;age_19&quot;</bucket>
            </map>
            <map to='#fda45e'>
              <bucket>&quot;age_18&quot;</bucket>
            </map>
            <map to='#fda661'>
              <bucket>&quot;age_17&quot;</bucket>
            </map>
            <map to='#fda964'>
              <bucket>&quot;age_16&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#798e87'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#798e87'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
            </map>
            <map to='#c27d38'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#c27d38'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#7b3014'>
              <multibucket>
                <bucket>&quot;age_93&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7d3012'>
              <multibucket>
                <bucket>&quot;age_92&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7f7f7f'>
              <multibucket>
                <bucket>&quot;Hispanic&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#803011'>
              <multibucket>
                <bucket>&quot;age_89&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#823010'>
              <multibucket>
                <bucket>&quot;age_88&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#85300f'>
              <multibucket>
                <bucket>&quot;age_87&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#88300e'>
              <multibucket>
                <bucket>&quot;age_86&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8a300c'>
              <multibucket>
                <bucket>&quot;age_85&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8d300b'>
              <multibucket>
                <bucket>&quot;age_84&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#90310a'>
              <multibucket>
                <bucket>&quot;age_83&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#923109'>
              <multibucket>
                <bucket>&quot;age_82&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#953108'>
              <multibucket>
                <bucket>&quot;age_81&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#983106'>
              <multibucket>
                <bucket>&quot;age_80&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9a3105'>
              <multibucket>
                <bucket>&quot;age_79&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d3104'>
              <multibucket>
                <bucket>&quot;age_78&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9f3103'>
              <multibucket>
                <bucket>&quot;age_77&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a23102'>
              <multibucket>
                <bucket>&quot;age_76&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a53201'>
              <multibucket>
                <bucket>&quot;age_75&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a93401'>
              <multibucket>
                <bucket>&quot;age_74&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ac3501'>
              <multibucket>
                <bucket>&quot;age_73&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b03601'>
              <multibucket>
                <bucket>&quot;age_72&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b33701'>
              <multibucket>
                <bucket>&quot;age_71&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b73801'>
              <multibucket>
                <bucket>&quot;age_70&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba3a01'>
              <multibucket>
                <bucket>&quot;age_69&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bcbd22'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bd3b01'>
              <multibucket>
                <bucket>&quot;age_68&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c13c01'>
              <multibucket>
                <bucket>&quot;age_67&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c43d01'>
              <multibucket>
                <bucket>&quot;age_66&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c7c7c7'>
              <multibucket>
                <bucket>&quot;Other&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c83e01'>
              <multibucket>
                <bucket>&quot;age_65&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cb4001'>
              <multibucket>
                <bucket>&quot;age_64&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cf4101'>
              <multibucket>
                <bucket>&quot;age_63&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d24201'>
              <multibucket>
                <bucket>&quot;age_62&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d54301'>
              <multibucket>
                <bucket>&quot;age_61&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d84501'>
              <multibucket>
                <bucket>&quot;age_60&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d94702'>
              <multibucket>
                <bucket>&quot;age_59&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#db4903'>
              <multibucket>
                <bucket>&quot;age_58&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dd4b04'>
              <multibucket>
                <bucket>&quot;age_57&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de4e05'>
              <multibucket>
                <bucket>&quot;age_56&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e05006'>
              <multibucket>
                <bucket>&quot;age_55&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15208'>
              <multibucket>
                <bucket>&quot;age_54&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e35409'>
              <multibucket>
                <bucket>&quot;age_53&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e377c2'>
              <multibucket>
                <bucket>&quot;Asian&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e5560a'>
              <multibucket>
                <bucket>&quot;age_52&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e6590b'>
              <multibucket>
                <bucket>&quot;age_51&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e85b0c'>
              <multibucket>
                <bucket>&quot;age_50&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea5d0d'>
              <multibucket>
                <bucket>&quot;age_49&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb5f0e'>
              <multibucket>
                <bucket>&quot;age_48&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed610f'>
              <multibucket>
                <bucket>&quot;age_47&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6310'>
              <multibucket>
                <bucket>&quot;age_46&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f06612'>
              <multibucket>
                <bucket>&quot;age_45&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c091'>
              <multibucket>
                <bucket>&quot;age_1&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c294'>
              <multibucket>
                <bucket>&quot;age_0&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16814'>
              <multibucket>
                <bucket>&quot;age_44&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1be8e'>
              <multibucket>
                <bucket>&quot;age_2&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26a17'>
              <multibucket>
                <bucket>&quot;age_43&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f2bd8b'>
              <multibucket>
                <bucket>&quot;age_3&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36d1a'>
              <multibucket>
                <bucket>&quot;age_42&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36f1c'>
              <multibucket>
                <bucket>&quot;age_41&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f3bb88'>
              <multibucket>
                <bucket>&quot;age_4&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4721f'>
              <multibucket>
                <bucket>&quot;age_40&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4ba85'>
              <multibucket>
                <bucket>&quot;age_5&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f57421'>
              <multibucket>
                <bucket>&quot;age_39&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5b882'>
              <multibucket>
                <bucket>&quot;age_6&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f67624'>
              <multibucket>
                <bucket>&quot;age_38&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b57c'>
              <multibucket>
                <bucket>&quot;age_8&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b77f'>
              <multibucket>
                <bucket>&quot;age_7&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77926'>
              <multibucket>
                <bucket>&quot;age_37&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7b479'>
              <multibucket>
                <bucket>&quot;age_9&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7b6d2'>
              <multibucket>
                <bucket>&quot;Black&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f87b29'>
              <multibucket>
                <bucket>&quot;age_36&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b276'>
              <multibucket>
                <bucket>&quot;age_10&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f97d2c'>
              <multibucket>
                <bucket>&quot;age_35&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9802e'>
              <multibucket>
                <bucket>&quot;age_34&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9b173'>
              <multibucket>
                <bucket>&quot;age_11&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa8231'>
              <multibucket>
                <bucket>&quot;age_33&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#faaf70'>
              <multibucket>
                <bucket>&quot;age_12&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb8533'>
              <multibucket>
                <bucket>&quot;age_32&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fbae6d'>
              <multibucket>
                <bucket>&quot;age_13&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc8736'>
              <multibucket>
                <bucket>&quot;age_31&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcab67'>
              <multibucket>
                <bucket>&quot;age_15&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcac6a'>
              <multibucket>
                <bucket>&quot;age_14&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8939'>
              <multibucket>
                <bucket>&quot;age_30&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8b3c'>
              <multibucket>
                <bucket>&quot;age_29&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8e3f'>
              <multibucket>
                <bucket>&quot;age_28&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9042'>
              <multibucket>
                <bucket>&quot;age_27&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9245'>
              <multibucket>
                <bucket>&quot;age_26&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9448'>
              <multibucket>
                <bucket>&quot;age_25&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd974b'>
              <multibucket>
                <bucket>&quot;age_24&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd994e'>
              <multibucket>
                <bucket>&quot;age_23&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9b51'>
              <multibucket>
                <bucket>&quot;age_22&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9d54'>
              <multibucket>
                <bucket>&quot;age_21&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda058'>
              <multibucket>
                <bucket>&quot;age_20&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda25b'>
              <multibucket>
                <bucket>&quot;age_19&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda45e'>
              <multibucket>
                <bucket>&quot;age_18&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda661'>
              <multibucket>
                <bucket>&quot;age_17&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda964'>
              <multibucket>
                <bucket>&quot;age_16&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1015843192260386816:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:measure:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;households&quot;</bucket>
            <bucket>&quot;hh_income_quartile_1&quot;</bucket>
            <bucket>&quot;hh_income_quartile_2&quot;</bucket>
            <bucket>&quot;hh_income_quartile_3&quot;</bucket>
            <bucket>&quot;hh_income_quartile_4&quot;</bucket>
            <bucket>&quot;hh_size_1&quot;</bucket>
            <bucket>&quot;hh_size_2&quot;</bucket>
            <bucket>&quot;hh_size_3&quot;</bucket>
            <bucket>&quot;hh_size_4_plus&quot;</bucket>
            <bucket>&quot;hh_workers_0&quot;</bucket>
            <bucket>&quot;hh_workers_1&quot;</bucket>
            <bucket>&quot;hh_workers_2&quot;</bucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
            <bucket>&quot;age_00_18&quot;</bucket>
            <bucket>&quot;age_19_64&quot;</bucket>
            <bucket>&quot;age_65_up&quot;</bucket>
            <bucket>&quot;occupation_professional&quot;</bucket>
            <bucket>&quot;occupation_services&quot;</bucket>
            <bucket>&quot;occupation_manual&quot;</bucket>
            <bucket>&quot;occupation_retail&quot;</bucket>
            <bucket>&quot;occupation_management&quot;</bucket>
            <bucket>&quot;occupation_military&quot;</bucket>
            <bucket>&quot;age_0&quot;</bucket>
            <bucket>&quot;age_1&quot;</bucket>
            <bucket>&quot;age_2&quot;</bucket>
            <bucket>&quot;age_3&quot;</bucket>
            <bucket>&quot;age_4&quot;</bucket>
            <bucket>&quot;age_5&quot;</bucket>
            <bucket>&quot;age_6&quot;</bucket>
            <bucket>&quot;age_7&quot;</bucket>
            <bucket>&quot;age_8&quot;</bucket>
            <bucket>&quot;age_9&quot;</bucket>
            <bucket>&quot;age_10&quot;</bucket>
            <bucket>&quot;age_11&quot;</bucket>
            <bucket>&quot;age_12&quot;</bucket>
            <bucket>&quot;age_13&quot;</bucket>
            <bucket>&quot;age_14&quot;</bucket>
            <bucket>&quot;age_15&quot;</bucket>
            <bucket>&quot;age_16&quot;</bucket>
            <bucket>&quot;age_17&quot;</bucket>
            <bucket>&quot;age_18&quot;</bucket>
            <bucket>&quot;age_19&quot;</bucket>
            <bucket>&quot;age_20&quot;</bucket>
            <bucket>&quot;age_21&quot;</bucket>
            <bucket>&quot;age_22&quot;</bucket>
            <bucket>&quot;age_23&quot;</bucket>
            <bucket>&quot;age_24&quot;</bucket>
            <bucket>&quot;age_25&quot;</bucket>
            <bucket>&quot;age_26&quot;</bucket>
            <bucket>&quot;age_27&quot;</bucket>
            <bucket>&quot;age_28&quot;</bucket>
            <bucket>&quot;age_29&quot;</bucket>
            <bucket>&quot;age_30&quot;</bucket>
            <bucket>&quot;age_31&quot;</bucket>
            <bucket>&quot;age_32&quot;</bucket>
            <bucket>&quot;age_33&quot;</bucket>
            <bucket>&quot;age_34&quot;</bucket>
            <bucket>&quot;age_35&quot;</bucket>
            <bucket>&quot;age_36&quot;</bucket>
            <bucket>&quot;age_37&quot;</bucket>
            <bucket>&quot;age_38&quot;</bucket>
            <bucket>&quot;age_39&quot;</bucket>
            <bucket>&quot;age_40&quot;</bucket>
            <bucket>&quot;age_41&quot;</bucket>
            <bucket>&quot;age_42&quot;</bucket>
            <bucket>&quot;age_43&quot;</bucket>
            <bucket>&quot;age_44&quot;</bucket>
            <bucket>&quot;age_45&quot;</bucket>
            <bucket>&quot;age_46&quot;</bucket>
            <bucket>&quot;age_47&quot;</bucket>
            <bucket>&quot;age_48&quot;</bucket>
            <bucket>&quot;age_49&quot;</bucket>
            <bucket>&quot;age_50&quot;</bucket>
            <bucket>&quot;age_51&quot;</bucket>
            <bucket>&quot;age_52&quot;</bucket>
            <bucket>&quot;age_53&quot;</bucket>
            <bucket>&quot;age_54&quot;</bucket>
            <bucket>&quot;age_55&quot;</bucket>
            <bucket>&quot;age_56&quot;</bucket>
            <bucket>&quot;age_57&quot;</bucket>
            <bucket>&quot;age_58&quot;</bucket>
            <bucket>&quot;age_59&quot;</bucket>
            <bucket>&quot;age_60&quot;</bucket>
            <bucket>&quot;age_61&quot;</bucket>
            <bucket>&quot;age_62&quot;</bucket>
            <bucket>&quot;age_63&quot;</bucket>
            <bucket>&quot;age_64&quot;</bucket>
            <bucket>&quot;age_65&quot;</bucket>
            <bucket>&quot;age_66&quot;</bucket>
            <bucket>&quot;age_67&quot;</bucket>
            <bucket>&quot;age_68&quot;</bucket>
            <bucket>&quot;age_69&quot;</bucket>
            <bucket>&quot;age_70&quot;</bucket>
            <bucket>&quot;age_71&quot;</bucket>
            <bucket>&quot;age_72&quot;</bucket>
            <bucket>&quot;age_73&quot;</bucket>
            <bucket>&quot;age_74&quot;</bucket>
            <bucket>&quot;age_75&quot;</bucket>
            <bucket>&quot;age_76&quot;</bucket>
            <bucket>&quot;age_77&quot;</bucket>
            <bucket>&quot;age_78&quot;</bucket>
            <bucket>&quot;age_79&quot;</bucket>
            <bucket>&quot;age_80&quot;</bucket>
            <bucket>&quot;age_81&quot;</bucket>
            <bucket>&quot;age_82&quot;</bucket>
            <bucket>&quot;age_83&quot;</bucket>
            <bucket>&quot;age_84&quot;</bucket>
            <bucket>&quot;age_85&quot;</bucket>
            <bucket>&quot;age_86&quot;</bucket>
            <bucket>&quot;age_87&quot;</bucket>
            <bucket>&quot;age_88&quot;</bucket>
            <bucket>&quot;age_89&quot;</bucket>
            <bucket>&quot;age_92&quot;</bucket>
            <bucket>&quot;age_93&quot;</bucket>
            <bucket>&quot;Non-worker&quot;</bucket>
            <bucket>&quot;Less than 9 hours&quot;</bucket>
            <bucket>&quot;Between 8 and 17 hours&quot;</bucket>
            <bucket>&quot;Between 16 and 25 hours&quot;</bucket>
            <bucket>&quot;Between 24 and 33 hours&quot;</bucket>
            <bucket>&quot;Between 33 and 41 hours&quot;</bucket>
            <bucket>&quot;Between 40 and 61 hours&quot;</bucket>
            <bucket>&quot;More than 60 hours&quot;</bucket>
            <bucket>&quot;White&quot;</bucket>
            <bucket>&quot;Hispanic&quot;</bucket>
            <bucket>&quot;Asian&quot;</bucket>
            <bucket>&quot;Black&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;Less than 21 hours&quot;</bucket>
            <bucket>&quot;Between 21 and 35 hours&quot;</bucket>
            <bucket>&quot;Between 35 and 46 hours&quot;</bucket>
            <bucket>&quot;More than 46 hours&quot;</bucket>
            <bucket>&quot;Non-student&quot;</bucket>
            <bucket>&quot;Preschool&quot;</bucket>
            <bucket>&quot;Grade School&quot;</bucket>
            <bucket>&quot;Middle School&quot;</bucket>
            <bucket>&quot;High School&quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='age.cross vaild.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='Control Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' field-type='quantitative' max='50000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='Synthesized Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk] + [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='age.cross valid.rmse chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: Percent Root Mean Square Error</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[measure]' derivation='Attribute' name='[attr:measure:nk]' pivot='key' type='nominal' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1015843192260386816:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='Percent Root Mean Square Error' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' palette='tableau-orange-white-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' value='Error'>
              <formatted-text>
                <run>Error</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[attr:measure:nk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Measure:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Pct RMSE:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1620'>Æ&#10;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1620'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-color' value='#3f6a6e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='check sums'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='320' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.county deep dive'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='31' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='111' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='31' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='148' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='124' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='164' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='100' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk] / ([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]))</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.individual'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Control Statistics: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1004865667122827264]' role='measure' type='quantitative' user:unnamed='controls.individual'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165723889665]' derivation='Avg' name='[avg:Calculation_1021754165723889665:qk]' pivot='key' type='quantitative' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1004865667122827264]' derivation='User' name='[usr:Calculation_1004865667122827264:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='42' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='88' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='320' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</rows>
        <cols />
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='controls.summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' direction='DESC' />
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='117' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='92' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='hours work.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Usual Hours Worked Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Usual Work Week Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='household controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Household Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of People&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of Workers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Households' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='person controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Person Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age Category&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Occupation&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='race eth.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Race/Ethnicity Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Race Ethnicity&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='student.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Student Status: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_04' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='real' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='real' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='real' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='real' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='real' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:measure:nk]' />
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;Non-student&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Student Status&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons / Percent RMSE' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='controls.summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.individual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;households&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='check sums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.county deep dive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='household controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='person controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;age_00_18&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='race eth.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Sonoma&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='hours work.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Sonoma&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='student.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Sonoma&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='age.cross vaild.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&#10;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='86'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Sonoma&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='age.cross valid.rmse chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='controls.summary' width='192'>
      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
      3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='controls.individual' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='check sums' width='192'>
      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
      CpLwBfjcJDQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='controls.county deep dive' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='household controls.county.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='person controls.county.chart' width='192'>
      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
      HbZrezkvk9SSSJKEjMVQbKu394nYbQ2NOKy2gttnM1lyUg5JklBMTkOxLTWdT8TubGqh0l1W
      UHtJkkin0988Z6npMhRbNjlIp9PIsozZbDb0t26o9SLpf7j2tsfS6TQul2vX53VdR/rWO4K+
      pqoqsizjcDgMt33e2LIso+s6Ntv2E2i/Y+dyOcxmMxbLzq9N+xk7k8lgt9t3PFmeN/bXp9lu
      7Z+n35qmkcvlcDqdhtse2DJoZDFEYH6K3928v+PzJpMJu92+c2NNIRQKcf13VwiurBuOHQ4F
      mZ8Z54u7D3Z83mKx7F7JquYJBkNcu/Ixy9HC1+m/thQKMjv5kFsDozs+b7PZMJvNu8TOEAyG
      +PSjD4lsFvaWwz8UCgaZGhvm3vDYjs87HI7dT3AlRTAY4uMPPiCWNF7mHgqFGB8ZYOjR1I7P
      73bywuNzJeif5tMv7xmOi64SCoX48rMrBMLbp+YHlgCammU6GMNXvX2ohMevFE97tfFPPcLX
      1k0uZ3wFQpHTLEQSeCt2Hl2eHltnZnyUlq4esnnjJ0I+k2B5I0+Ve+cEe2psHcZHh+k60kNW
      VgzHzqY2iKWhzL7zn/3psXVGhoboO3qEjKwajp3eipJQ7TjN2q6xd6NreSYW1miqLTccFx0W
      Zsaob+0ml91+rhxYAlgsFnQ5xUqs8OW2b0gSVpudBf/c7qPEU1jNFtRMnOiW8VdRJBM2uwP/
      /DwOm/H3O1jNZnKpdTaS+aJiOxwO5uYXcFp3GSWeFttkJrUVJZE1fgJjMuN0OpiZW8Bp2f1k
      3Y3FbCKxHiElG29rtViQlDThIkZcJLBa7QT8c9h3mE4fWClEKpmkobkVt8ttvLGuoUpW2toa
      qHDv/Cr+NMlkCl9LG+4dLtSeSVPQLQ7amusoc+58jfA0iVSa5pY2XO6KImLLYHPT5vPishtP
      vkQ6S2trG66yImKreUyOSloaa3DajCdfIp2nra0NV3mV4bbJZIL6plbKnnKNsCtdR8VCW1sz
      Fe7t06wDGwEaWjrxuB24XbvP/XYlmenr7cFud2C1GP9jNLV3UuGy43rKvHNXZjt9RzqxO5xF
      xW7r7MbtsONyGU9czE6O9rTjcDixmI3/6Tq7e3DabbicRcS2uDna04LD6cJsMv4q3n3kCDab
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='race eth.cross valid.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='hours work.cross valid.chart' width='192'>
      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
      XczNTLGvuxswKY3Wceq9E4T9TrRAJdmFOXzhAGdPniIQCRMuKcPr2l77eIW4lnWHQH6XyuTY
      MJ5gGQCKomGlZ9H85ew7eJjmcidD8TxGJovL6wCrwKW+fvL5vDTEiB1l3QAsLCVpbmrGqa0c
      4myZOseOn6Q07GNyfITLo9Ps3tVMQ00lre2dkM8QKSvH6/Xekl+Xi1vXukOg7v23Mb+4jMe3
      2g+guvjil7+ydn/z7g8uBQAou/PIphYpxGZZ/3eBzr7LuyfP0HPp8lbXI8SWWncNUFXfiqIM
      g/wynLjFrd8SuTDDfCqP0+lc724hbhkfXQOYBrPxOEtZkwMHDuD2ynFA4tb2sTWAycJ8gnA4
      zNzcHMup9M2pSogt8rGD4Zy4NY26+hoGBwaIJxZuUllCbI2rtgEy6WV+c+wYBz5zP0Ze1gDi
      1nbVXqC2zv1UN7UR9Hso8bTejJqE2DJXBUBRNULBlS+4ggE5A7y4tclxC8LWJADC1iQAwtaK
      CoBlmQz29zE5HSeXXqa37xLp1BLv/fZdFlMZJiZjm12nEJuiyDWASXlVHX0XznDq1CnKgk7e
      fOvEakPMaWbm4ixn8hv+tTEhbraiAqAoGkZyBkegAsOAUDCAL1KGmc3hWW2I6e+7hK7r0hAj
      dpTihkCmzpvvnKY05KW5sYbTFwfo7OygvraS3Xs6Qc9SUl6Bx+ORhhixoxS1o19RXTzxpS+v
      Xa9rblu9tHIWybI7Dt/wwoTYCvJxLWxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIg
      bE0CIGxNAiBsTQIgbK3IrneL3tPv4K7uwJGOEU/qVJeX0Ns/QFtHN6lkkrZdTZtaqBCbocgA
      KNRVlXJpKY0vs0wuZ5FMOvAFfPRcuEgw5GMyECIScEs/gNhRNjwEau28ja6WKmZSKg3VlVRG
      S/F4fUxdmcTv90s/gNhRiloDWJbFVCINJkxfyTK3kORAVwdGaoFIZT2Tg31E6ps2uVQhbrzi
      GmIUhdaug2vX6xpXL7jKAVa6woTYgWS8ImxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBs
      TQIgbE0CIGxNTgK2w2Ti45h6bkPT+Cp3oSjKJlW0s0kAttAzP3+O4fGxDU3zh//0XxDw+dau
      9/7wj0lN9W9oHvc8eRwkAOvaQEPM27iqOgmzyOD4NPW1VVy6PEjr3m7SySRtu5s2tdBbQS6X
      I53NbGwiy9qcYgRQ9DaAQl1VGfPLafr6h+ne08Dpsxfx+r30XrxIIj7DxHSCVColDTFiR9nw
      RrCqKuTyeSrqd9NUW73SEOPzMi0NMWIHKvIkeRZT82mU3BL79nUyemWR/R27CPgCtO7tJOjS
      aGxu2exahbjhim+I6fxdQ8yByEojDCVlAOxq77jxlQmxBWS8ImxNdoOKmyabyxFfmN/QNAGf
      n3AwuHY9vzzHu9/64obmUbL7Tjp//88BCUDRpk79DEPPFv14zemh6tDf38SKdr6x2CR/89zf
      bWiazx66k8/f+8DadQuwDH1D87CMwtrlWz4AqUya//a3f7WhaZrr6vnHjz/xkdtGXvtL9GSi
      6Hk4/SUSgB3glg+AZVmkMukNTZPJFv9JL3Y22QgWtiYBELYmARC2JgEQtiYBELYmARC2JgEQ
      trbh7wFGB3pIpApUlUfo6x+gdU836VRKGmLEjrThAKRTaXKZAsllBx6vl5733ycU9DIRCFIS
      9EhDjNhRNjwEatnTTWdLFbMZlV0NtVRXluHx+ZiOXZGGGLHjbPjdmpiJMTy1zG2drfh8flr3
      dBB0azS1SEOM2Hk2PASqrm+iun71imu1IaZNGmLEziTjFWFr/w8gjTR6nEOm7QAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='student.cross valid.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='age.cross vaild.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='age.cross valid.rmse chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAATnklEQVR4nO3d228b6XnH8e8ceJR4kEiJ1Nmy5NPaa3uzmz3k0CBFgkWTNkVb9B/IVf+O
      Br1o0KsCRVH0smh7GRRoCrQFmjbNZnez8dper2zJkqgjJZHi+UwOZ6YX8spJyKC0LVGi5vkA
      gsQRKT60+eO88/LhO4pt2zZCOJR+mn9csiXOu1MLgG3blMtldP1UMybEK+np2WmbTZaX18Dl
      4/L0GPvZCnPTE4DN/u4WgegEhzvreMNxNNtgPBaj2Wxi2zZ+v/+UH4IQL0/p9RjAatf58JMl
      zFaFyREf7unbjJHl4XaVRj5JcCSK1ShjqW4uX71ONBygVqtJAMS5pvZ6xd2Vz5hYfA0UlXDA
      T7Fco1Ep4Q+NgqIyMuSiZtiYisLW+upp1izEiel5gF433ExH/Njjo6weVLmy0KRiRqntrjI2
      Mcvc5WlUT5BWLU/D9pxmzUKcmJ6HQC9DhkDivOt5CCTERSQBEI4mARCOJu9SnXOW2cYyTQB0
      t0wunDTZA5xz//W3f8mfvzvNX3z98lmXciFJAISjSQCEo0kAhKP1eBBsU8ikKTQshl0W6WyJ
      xWs3cKk2ye2NZ81wCXzhOBoGsXgc5XTrFuJE9LQHsMwW9x4uEwkHeLz0GJfXj0u1qed2SBZN
      7v/iQ0qNNnsbT9ja2iaTK2FZlnweQJx7PQXANquUSnX+94OPeOcrX0crJ1lPVWnVqviGw6Co
      RAJeGqaKrWlsb6xhGAbms+k7Ic6rnoZAqivMwqUoTdzsbCXI1lQuU6TsitJIrhGbusTMpUkU
      TwCjmqeBB4/HIwEQ515PAVAUldtvvHV8efFXfjcTHzv+eXZ6Epg8qdqEOHUyCyQcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0+ETaAfv6Pf8e9f/knXB4vf/YP/37W5Qw0CcAAKmdS
      pFYf4/L6zrqUgddzO3Q2vU+pAbGwj71smYVLs4DNzuY6gcgEh8mjdmjdNohPTko7tBgIPbZD
      N7n/2VNGwwF+ef8ztOoBm5kq9ew2BxWFh/c+ptKw2E88YWt7l3SmgGmaWJZ12vUL8Up6bIeu
      U622+PlHH4OiMOz3UKs3aTVqeIYCoKiMhf20cKG4NHa3EhIAMRB6bodevBSliYfIkEYiW+XK
      XIOyNYaxt8bkzGWmZuMo7gCtWp6m7cHtdtNut0+7fiFeSY/t0Ao373zp+PLcs++jwEw8erx9
      eioOxE+wPCFOl7wPIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBytt3Zo
      2+bp8hK6fwS/1iZXqh2vDr25/pRgdJJMMoE3HEenzeTUlLRDi4HQWzeobbG2nkB36ayuraFo
      OppqU8tskWm4eXT/E6otm4ONZba2dzlI52i329INKs693oZAisq33v89VpY+492v/A6+VoZE
      qkK71cDt84OqERsN0ta86G6d/Z1NbNuW5dHFudfTEMgy6jx5/JTY1CxbG6vkGy4uqyVKRDFz
      60zPLTAxPQ7uIYxqgQYeXC4XhmGcdv1CvJKeAqC5/dy5e7dje4Rfb4eemogBsZOqTYhTJ7NA
      wtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtF6bodefvwI93CEyLCLvWyZ
      a1cWULBIrC4TiE6RTW7gDcdxYTA1MyPt0GIg9NwOvbG5iaIqPPz8CcNmnkS6QvVwk3x7iCcP
      71Fr26Q2n7C1s8feQQbDMDBN87TrF+KV9NwO/e33v8P6yhIoCh63jmG0MQ0D3e0BVWMyOoLt
      GsbtdZHa20FRFBRF9gPifOu5HXrp8VPi0/OMeGE7V2VxpkbJikIxwcz8FWKTUXANYdTyNPCi
      6zqqKocY4nx7qXboqUtH38PATCxyvH0iPgaMnWB5QpwueYkWjiYBEI4mARCOJgEQjiYBEI4m
      ARCOJgEQjiYBEI4mARCO1hkA2yaVSp9BKUL0X9dWiI2nn7OyonPpymvMThyt/GYaNZ4m9gl4
      bEo149nq0BZry4+P2qH3NvCF4+hKm5nZWWmHFgOhawCGhoZoFGvoLtfRBtvm048/JlVXGHFb
      BCIxVMWmmt6gRIi9z+8zHBqhtLWMqflRXF5ikTDtdrufj0WIF9b1GKDSNHntxhXSz4ZCrWqO
      g0KDSj7P21/7BmGlQiJVwTJNNN0FqsZ0LILiDeL1uzncT6JpmnSDinOv6x5gKj7GXrrEzZvX
      AXAPR/iD777PemKD7bUVik0P83qZohVFrSSYW7jGWHwU2+XHqBVo4pEAiIHQ/RhgfR2XP0gq
      U2A6Nnq0UVFZWFj4teuNADNf/B6Ij0eBKEIMiq4BmJxbYHZ2Fk3v7SPDQgyqrmOURjnPvXv3
      OMgU+12PEH3VEYCV1VVCYxN85b13KRezZ1GTEH3TMcaplXIkEgUO0yl0f/gsahKibzoCcPfN
      d86iDiHOREcAFAUOdrcw9CFGg8MM+X1nUZcQfdGlFwj20lkK2QMSG1uvfAcfrOzx7R/8iG//
      4EckUsVn2/b53g9/zPd++GO2M+VXvg8hXlbXWSDVbJJMHjA7f/mV78C0bBqGScMwsZ6dN9j6
      lW1yKmFxlroGoFgsERjyUyrJq7O42LoG4PqN67jdbjRNWhnExdblGW6zubmKrfrI53LPt9om
      2WwOo1EleZD+YiPp/STVhsHm2goHmQKHh4fIqEYMii69DgpXb7zJ1toTRiKzx1tX7n/Mo70a
      8YCLsaCbXU+QKFnW9goYK6sEwiNY2SegutE9fkaCQ318GEK8nK5jnOVH99hNHbKfygBH7dAP
      1w+gWcVUFMZGhskXq9TLBYZHY9hAyKdTbbZp2RbrT1eo1+sYhtHPxyLEC+va7eb2ePEPaXjd
      R/lw+cP88R9+l4ePlgh6NVaSZa4sNiibUSo7y0RiU8wvzqF6UrRqeRq2B5/Phy1TPOKc6xqA
      yFgMf8tEtZpkixUioWFcbg9vvfklAK7+ynVnJ2PHP89fmgFmTrNeIU5U1yHQQfoQv9fFQTqL
      LjNB4gLr+uz2qDZPVta4tHiN0LC/3zUJ0TcdAUhsbHDj+hVahiljeHHhdQSgmM/wHz/5kN/9
      1jcp5DJnUZMQfdNxEHznzl0uX3kNr2qzuLjQ7TZCXBgdewBVd2M2y6wmtmk0GmdRkxB903Vp
      xCfLqwQCAdzyoXhxwXWdBdJVi0QiQaFc7Xc9QvRV15f4Ya+bQq5Ks9W/M73/bHmfv/rXBwD8
      zfe/ztTocN/uWzhX1z1AW9XwuXxUyvl+1wMg3aSib7ruAUYCIQzqzExNAWDbNns7G3iD4yhG
      mYPDwrPVoW0OktsEIhOkd9bxhmPotBkbH5fVocVA6BIAm2y5jtets7+XJDpyHbDwB0b4xccf
      4tVtZhZfw6XaNPJJtjINGqs/IzgSxcotY6kuNLef0dCQvJEmzr2OIZBpWoxHI3g9HuaOPxOs
      0G7W0Dxevvze1zBzmyQOa7SbdTz+AIqqsTA/C6qGpShsrj+l2WzK8uji3OvYAzy+/yE///Qx
      M5cW8QWjBP2j2O0meweHzM7McrC7RVUbYV4tUWQMT3ODhWu3CAz7mVu4SrtWpIkHr9eLZVln
      8ZiE6FlHAG6+8Q6aL8jm9h4jI0crw6kuH3fu3u24cQhg/I3jy2MRN0RGTq1YIU5aRwCefPYp
      +abC+PgYxUIJ/5gsjzgIjNQGZm4PVA3vtXfPupyB0XUP8MWhqxzEDo7KT/+Z8n/+PYp3mJm/
      fnTW5QyMjgCk9zb56UefMhkfxxuO86WbV86iLiH6oiMA45OX+Mbv+NFdXsKh4FnUJETfdH0j
      bPXJYzw+P0ORKa5fnu53TUL0TddWCAWTfLGMpmn9rkeIvuoagGgkiq5pREZlSlNcbF2XRiw3
      bb76lbfZ3tzof0VC9FFHAGwbwkMufvbRp1xeePXl0YU4zzoOgj+//wv2Dg5poJPJFQn6x8+i
      LiH6oiMAdaPN2IifZN3HkM8DHK0M/eTzRyjeEKM+lWS2zJ3bN1Fti6VHDwlEJ8nvb+ELx3Ep
      beYXFqQdWgyEjgC89eX3sGyb24CqHo2QFFTGoxHuL2+S1myuTwZ5miwypaYx/BNsPl3CHwhR
      3l7BcgewdS+T46OyOK449zqOARRFIZPNoQCp9CEANhahaJx2s4YCtE0TTVWwFQXbNEF1sTg/
      iy88TmDYSzGbxufz4XK5+vxwhHgxHXuAzMEOH33ygLFIhEvXbgFgmwbLT55y9fpNRnwKyWyV
      eW+dkjWO39xi4rXXCYWHmFc8tOsFmnj7/kCEeBkdARibmGV+Kkk6X6XZbAGg6l5ev337+Dqj
      zxaEHgYmo8+3R0bdPGuSFmIgdG2FsHU/7777Om6PnCNYXGzdWyGMCp98+oBMvtTveoToq64B
      aLQVRkZD5LPpftcjRF91DUDA52Z7c5PxCekEFRdb1wB4g1G+9533Keay/a5HiL7qehB8mNxg
      fX2V+Wu3u/26b8p1g1SxDsBsdBi3LqdrEierawCGRsa5OjWFb+hs1+fczVX5t/s7AHz/m1dx
      654zrUdcPN2HQLrNxuYmxXKt3/UI0VddA1DIFzBVnXIh1+96hOirrgGwLZP1lcdoXlmiXFxs
      HccAe1trlA2dP/qTP8Xz7BzBttni0aMlPIFRVKOMYWlHq0MrbR49fEAgMkk+tY0vFMOlmiws
      Lko7tBgIHXuAbKXJezcn2UxVny+Mpbq4dfs2u1sJioUitWoVy7Yo7a9jDU+ztf6Etq1yuLtK
      cj/N2sYO9Xpd2qHFudcRgGGvzuPNQ3I7Kxxki8fbH9//iNnFm7z+xluM+Uy2UkVsVcNst1BU
      F9evLjA0EiMQ8FLOZ6QdWgyEjiHQ/OJ15n9zo9Wi2tJQG2XSeyUq2ghzfoOKNU5Q2Wb61m2G
      A0PMz89j1os0pB1aDIieTgOpaB7eea9zwdVhIB65dXx5NOyCsKwmJwaHvLUqHE0CIBxNAiAc
      TQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHK2nVgjbbPHosyX0oRBBt8VBtsKdN+6g2W0+
      e/CAQCROIbWDNxzDrVgsXr0i7dAv4V4iw/3NLKqi8P1vXj3rchyhpwCgurh15zY/+cn/cOjS
      uTEVYjVZYEpNQWiWnY3P8fmHyOyugTuArbmZmRyXdugX1GiZFKotFHn16Jueh0CPfvkBl67f
      RsGm3jRwaWApOu1mHUV1ceu1GwQjEwSGvVSKuVNrh86VG9xPZLifyNA0zBP/+8JZetsDWC0M
      vDSrJe7eukEyU2FuyKRixRmp7DB3+y4+v++oHbpROtV26EqjzdZhBYCrkyE8LjmTpfjt6q02
      pmWjqQo+d+fTved26Lfefvv4cnD06LRJfmB85Mbx9nDIBaHAK5YsxMn576V99nI1YiEfv//W
      bMfvZRZIOJoEQDiaBEA4mgRAOFpvs0BiIOXKDUp1A1VRmB07WuTssFSnWDVQVYXLMZmwkABc
      YNvZKmv7JVyaehyARKrMcrKIx6VKAJAhkHA4CYBwNBkCCcdZ2slTrLUI+t0SAOE8B4U6qWKd
      8aC31wDYfP7JB4Tm71LZX8PWPCxeu4FOiwefPiAQiT1vh1Ytrl67Ju3QYiD0GACFybEQyWoL
      s9mk1W5gmBa19Dra6BzJrSV8Xi/ZZAI8AWxtg7mpuLRDD4inyQLJXA23rvLVG/GzLqevXvAg
      2Gbx+k2ifpvddB5LddOqV1FUF7fv3CY8Pklw2EutmJfVoQeIYdo0DdOR7eW9fSLMtsnWbTSt
      RKWg0h6aYCaoULPjjNV3Cdx9A4/Hw/yly5jNEk3kZHZiMPTWDq0oXLnx/JSpX+wk/UA0dO14
      eyjoAoZOsDwhTteFmAUq1w0ypQYAM9EhdE3e3rjotg4rlOsGPrfGQvzll+S/EM8U27YxraMv
      +6yLEX1RqDZJF+vkKs1X+jsXIgBCvKwLMQQaREbbom1aAPg85++/IZmtkis30XWVG9Phsy6n
      J4fFOg3DxK1rxMK+nm5z/v7lHSJVrJPMVgF45+r4GVfTqVRrkSrW8egqDEgAdjIVsuUmIb+7
      5wDIEEg4muwBxLnyeCdPptRgyKvz5sLYqd+fBECcuFqzjdG2UFUI+NwvdNu2aWGYz4+PTpsE
      QJy4ct2g0jBwaeoLB6DfJACiL5qGSdu0UBQF/zma9eq5HXpjZYngxCJqs8BetsyNa1dQsFhb
      eUwgOkV2bwNfOI5Om5nZWWmHFr9mI1XmsNTA59Z4a/HFxvaPtnJkSw2Gfa4Xvu3/p+coemmw
      l6+S21xhMTbMeqrMhJKmZAfZe3Sf4dAIpc1lTM2P4vISi4Rpt9snWuypsCywnnVBajqyNPP5
      Y5o2hmnTNk/+ff4ep0EVPJ6jDk9FUdB1jXbbwjJNNN0NqsZULILiDeL1uzncT6JpGqo6ALOs
      tgmmcfQlHKfnduhUoUZTz3Hl0jS7uSqL4SpFM4paSTC3cI3x+Ci4/Bi1Ak085zMA9m+8gsir
      /StLF+uU6wa6pjL3bOmVQdJzO/SNu+8cX554tshuCJiJjR5vj49HgehJ1ifOOcv+4msw2xDP
      z+H4OWda9vHctFtXUWTv8cq20hWKtRYel8a1qdCZ1CAB6FHbtGgazwPw29j285ZsBS5UUPLV
      JrVmG01ViIf9r/z3rGdt7JZ1dnuPczZIF+eZbT//uigkAMLRJADC0S7sMYBlPx9baqpyocbi
      4uT8H+gBKms4J+obAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>

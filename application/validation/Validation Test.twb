<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='year_2000_test_00' inline='true' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Documents/GitHub/popsyn3/application/validation' filename='year_2000_test_00.csv' password='' server=''>
        <relation name='year_2000_test_00.csv' table='[year_2000_test_00#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='geography_index' ordinal='0' />
            <column datatype='integer' name='control_households' ordinal='1' />
            <column datatype='string' name='measure' ordinal='2' />
            <column datatype='integer' name='synthesized_households' ordinal='3' />
            <column datatype='string' name='geography' ordinal='4' />
            <column datatype='integer' name='control_persons' ordinal='5' />
            <column datatype='integer' name='synthesized_persons' ordinal='6' />
            <column datatype='string' name='control_category' ordinal='7' />
            <column datatype='string' name='measure_category' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geography_index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography_index]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>geography_index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[control_households]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>control_households</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_households]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>synthesized_households</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[control_persons]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>control_persons</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_persons]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>synthesized_persons</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[control_category]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>control_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure_category]</local-name>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias>measure_category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[year_2000_test_00.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' value='Total Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' value='Control Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' value='Synthesized Households' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' value='Synthesized Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' value='Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' value='Percent Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' value='Pct RMSE' />
        </aliases>
      </column>
      <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
      </column>
      <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
      </column>
      <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
      </column>
      <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
      </column>
      <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
      </column>
      <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
      <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;county&quot;' value='County' />
          <alias key='&quot;maz&quot;' value='MAZ' />
          <alias key='&quot;taz&quot;' value='TAZ' />
        </aliases>
      </column>
      <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
          <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
          <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
          <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
          <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
          <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
          <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
          <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
          <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
          <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
          <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
          <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
          <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
          <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
          <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
          <alias key='&quot;households&quot;' value='Households' />
          <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
          <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
          <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
          <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
          <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
          <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
        </aliases>
      </column>
      <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='CountD' name='[ctd:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='CountD' name='[ctd:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\dory\Documents\GitHub\popsyn3\application\validation\year_2000_test_00.tde' schema='Extract' tablename='Extract' update-time='10/17/2016 09:35:51 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1000925085773357056]' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            <calculation column='[Calculation_1000925085783777281]' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            <calculation column='[Calculation_1021754165723889665]' formula='IFNULL([control_households], [control_persons])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='59518' timestamp-start='2016-10-17 21:35:51.120' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085773357056</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Calculation_1000925085773357056]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085773357056</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1268</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>28014</statistic>
                <statistic aggregation='Count' datatype='integer'>55113</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085783777281</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Calculation_1000925085783777281]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085783777281</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>988</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>784784196</statistic>
                <statistic aggregation='Count' datatype='integer'>55113</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1021754165723889665</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Calculation_1021754165723889665]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1021754165723889665</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1678</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1083888</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59518.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59518.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[control_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_category</remote-alias>
              <ordinal>4</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;controlled&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;not_controlled&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;controlled&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_households</remote-name>
              <remote-type>3</remote-type>
              <local-name>[control_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_households</remote-alias>
              <ordinal>5</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>819</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>214445</statistic>
                <statistic aggregation='Count' datatype='integer'>58609</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_persons</remote-name>
              <remote-type>3</remote-type>
              <local-name>[control_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_persons</remote-alias>
              <ordinal>6</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>893</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>4</statistic>
                <statistic aggregation='Max' datatype='integer'>1083888</statistic>
                <statistic aggregation='Count' datatype='integer'>909</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geography]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography</remote-alias>
              <ordinal>7</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;county&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;taz&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography_index</remote-name>
              <remote-type>3</remote-type>
              <local-name>[geography_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography_index</remote-alias>
              <ordinal>8</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39785</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>835411974.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14036.291105211869</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>39785</statistic>
                <statistic aggregation='Stdev' datatype='real'>12569.548330007568</statistic>
                <statistic aggregation='StdevP' datatype='real'>12569.442735052029</statistic>
                <statistic aggregation='Var' datatype='real'>157993545.22039607</statistic>
                <statistic aggregation='VarP' datatype='real'>157990890.66975224</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21129387490726.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure</remote-alias>
              <ordinal>9</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;age_0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;occupation_services&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure_category</remote-alias>
              <ordinal>10</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Households&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Persons by Occupation&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59518</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_households</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_households</remote-alias>
              <ordinal>11</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>803</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>213567</statistic>
                <statistic aggregation='Count' datatype='integer'>54204</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_persons</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_persons</remote-alias>
              <ordinal>12</ordinal>
              <family>year_2000_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>889</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>5</statistic>
                <statistic aggregation='Max' datatype='integer'>1074352</statistic>
                <statistic aggregation='Count' datatype='integer'>909</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.454352' measure-ordering='alphabetic' measure-percentage='0.545648' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:geography:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;county&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]' type='palette'>
            <map to='#7b3014'>
              <bucket>&quot;age_93&quot;</bucket>
            </map>
            <map to='#7d3012'>
              <bucket>&quot;age_92&quot;</bucket>
            </map>
            <map to='#803011'>
              <bucket>&quot;age_89&quot;</bucket>
            </map>
            <map to='#823010'>
              <bucket>&quot;age_88&quot;</bucket>
            </map>
            <map to='#85300f'>
              <bucket>&quot;age_87&quot;</bucket>
            </map>
            <map to='#88300e'>
              <bucket>&quot;age_86&quot;</bucket>
            </map>
            <map to='#8a300c'>
              <bucket>&quot;age_85&quot;</bucket>
            </map>
            <map to='#8d300b'>
              <bucket>&quot;age_84&quot;</bucket>
            </map>
            <map to='#90310a'>
              <bucket>&quot;age_83&quot;</bucket>
            </map>
            <map to='#923109'>
              <bucket>&quot;age_82&quot;</bucket>
            </map>
            <map to='#953108'>
              <bucket>&quot;age_81&quot;</bucket>
            </map>
            <map to='#983106'>
              <bucket>&quot;age_80&quot;</bucket>
            </map>
            <map to='#9a3105'>
              <bucket>&quot;age_79&quot;</bucket>
            </map>
            <map to='#9d3104'>
              <bucket>&quot;age_78&quot;</bucket>
            </map>
            <map to='#9f3103'>
              <bucket>&quot;age_77&quot;</bucket>
            </map>
            <map to='#a23102'>
              <bucket>&quot;age_76&quot;</bucket>
            </map>
            <map to='#a53201'>
              <bucket>&quot;age_75&quot;</bucket>
            </map>
            <map to='#a93401'>
              <bucket>&quot;age_74&quot;</bucket>
            </map>
            <map to='#ac3501'>
              <bucket>&quot;age_73&quot;</bucket>
            </map>
            <map to='#b03601'>
              <bucket>&quot;age_72&quot;</bucket>
            </map>
            <map to='#b33701'>
              <bucket>&quot;age_71&quot;</bucket>
            </map>
            <map to='#b73801'>
              <bucket>&quot;age_70&quot;</bucket>
            </map>
            <map to='#ba3a01'>
              <bucket>&quot;age_69&quot;</bucket>
            </map>
            <map to='#bd3b01'>
              <bucket>&quot;age_68&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;age_67&quot;</bucket>
            </map>
            <map to='#c43d01'>
              <bucket>&quot;age_66&quot;</bucket>
            </map>
            <map to='#c83e01'>
              <bucket>&quot;age_65&quot;</bucket>
            </map>
            <map to='#cb4001'>
              <bucket>&quot;age_64&quot;</bucket>
            </map>
            <map to='#cf4101'>
              <bucket>&quot;age_63&quot;</bucket>
            </map>
            <map to='#d24201'>
              <bucket>&quot;age_62&quot;</bucket>
            </map>
            <map to='#d54301'>
              <bucket>&quot;age_61&quot;</bucket>
            </map>
            <map to='#d84501'>
              <bucket>&quot;age_60&quot;</bucket>
            </map>
            <map to='#d94702'>
              <bucket>&quot;age_59&quot;</bucket>
            </map>
            <map to='#db4903'>
              <bucket>&quot;age_58&quot;</bucket>
            </map>
            <map to='#dd4b04'>
              <bucket>&quot;age_57&quot;</bucket>
            </map>
            <map to='#de4e05'>
              <bucket>&quot;age_56&quot;</bucket>
            </map>
            <map to='#e05006'>
              <bucket>&quot;age_55&quot;</bucket>
            </map>
            <map to='#e15208'>
              <bucket>&quot;age_54&quot;</bucket>
            </map>
            <map to='#e35409'>
              <bucket>&quot;age_53&quot;</bucket>
            </map>
            <map to='#e5560a'>
              <bucket>&quot;age_52&quot;</bucket>
            </map>
            <map to='#e6590b'>
              <bucket>&quot;age_51&quot;</bucket>
            </map>
            <map to='#e85b0c'>
              <bucket>&quot;age_50&quot;</bucket>
            </map>
            <map to='#ea5d0d'>
              <bucket>&quot;age_49&quot;</bucket>
            </map>
            <map to='#eb5f0e'>
              <bucket>&quot;age_48&quot;</bucket>
            </map>
            <map to='#ed610f'>
              <bucket>&quot;age_47&quot;</bucket>
            </map>
            <map to='#ef6310'>
              <bucket>&quot;age_46&quot;</bucket>
            </map>
            <map to='#f06612'>
              <bucket>&quot;age_45&quot;</bucket>
            </map>
            <map to='#f0c091'>
              <bucket>&quot;age_1&quot;</bucket>
            </map>
            <map to='#f0c294'>
              <bucket>&quot;age_0&quot;</bucket>
            </map>
            <map to='#f16814'>
              <bucket>&quot;age_44&quot;</bucket>
            </map>
            <map to='#f1be8e'>
              <bucket>&quot;age_2&quot;</bucket>
            </map>
            <map to='#f26a17'>
              <bucket>&quot;age_43&quot;</bucket>
            </map>
            <map to='#f2bd8b'>
              <bucket>&quot;age_3&quot;</bucket>
            </map>
            <map to='#f36d1a'>
              <bucket>&quot;age_42&quot;</bucket>
            </map>
            <map to='#f36f1c'>
              <bucket>&quot;age_41&quot;</bucket>
            </map>
            <map to='#f3bb88'>
              <bucket>&quot;age_4&quot;</bucket>
            </map>
            <map to='#f4721f'>
              <bucket>&quot;age_40&quot;</bucket>
            </map>
            <map to='#f4ba85'>
              <bucket>&quot;age_5&quot;</bucket>
            </map>
            <map to='#f57421'>
              <bucket>&quot;age_39&quot;</bucket>
            </map>
            <map to='#f5b882'>
              <bucket>&quot;age_6&quot;</bucket>
            </map>
            <map to='#f67624'>
              <bucket>&quot;age_38&quot;</bucket>
            </map>
            <map to='#f6b57c'>
              <bucket>&quot;age_8&quot;</bucket>
            </map>
            <map to='#f6b77f'>
              <bucket>&quot;age_7&quot;</bucket>
            </map>
            <map to='#f77926'>
              <bucket>&quot;age_37&quot;</bucket>
            </map>
            <map to='#f7b479'>
              <bucket>&quot;age_9&quot;</bucket>
            </map>
            <map to='#f87b29'>
              <bucket>&quot;age_36&quot;</bucket>
            </map>
            <map to='#f8b276'>
              <bucket>&quot;age_10&quot;</bucket>
            </map>
            <map to='#f97d2c'>
              <bucket>&quot;age_35&quot;</bucket>
            </map>
            <map to='#f9802e'>
              <bucket>&quot;age_34&quot;</bucket>
            </map>
            <map to='#f9b173'>
              <bucket>&quot;age_11&quot;</bucket>
            </map>
            <map to='#fa8231'>
              <bucket>&quot;age_33&quot;</bucket>
            </map>
            <map to='#faaf70'>
              <bucket>&quot;age_12&quot;</bucket>
            </map>
            <map to='#fb8533'>
              <bucket>&quot;age_32&quot;</bucket>
            </map>
            <map to='#fbae6d'>
              <bucket>&quot;age_13&quot;</bucket>
            </map>
            <map to='#fc8736'>
              <bucket>&quot;age_31&quot;</bucket>
            </map>
            <map to='#fcab67'>
              <bucket>&quot;age_15&quot;</bucket>
            </map>
            <map to='#fcac6a'>
              <bucket>&quot;age_14&quot;</bucket>
            </map>
            <map to='#fd8939'>
              <bucket>&quot;age_30&quot;</bucket>
            </map>
            <map to='#fd8b3c'>
              <bucket>&quot;age_29&quot;</bucket>
            </map>
            <map to='#fd8e3f'>
              <bucket>&quot;age_28&quot;</bucket>
            </map>
            <map to='#fd9042'>
              <bucket>&quot;age_27&quot;</bucket>
            </map>
            <map to='#fd9245'>
              <bucket>&quot;age_26&quot;</bucket>
            </map>
            <map to='#fd9448'>
              <bucket>&quot;age_25&quot;</bucket>
            </map>
            <map to='#fd974b'>
              <bucket>&quot;age_24&quot;</bucket>
            </map>
            <map to='#fd994e'>
              <bucket>&quot;age_23&quot;</bucket>
            </map>
            <map to='#fd9b51'>
              <bucket>&quot;age_22&quot;</bucket>
            </map>
            <map to='#fd9d54'>
              <bucket>&quot;age_21&quot;</bucket>
            </map>
            <map to='#fda058'>
              <bucket>&quot;age_20&quot;</bucket>
            </map>
            <map to='#fda25b'>
              <bucket>&quot;age_19&quot;</bucket>
            </map>
            <map to='#fda45e'>
              <bucket>&quot;age_18&quot;</bucket>
            </map>
            <map to='#fda661'>
              <bucket>&quot;age_17&quot;</bucket>
            </map>
            <map to='#fda964'>
              <bucket>&quot;age_16&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#7b3014'>
              <multibucket>
                <bucket>&quot;age_93&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7d3012'>
              <multibucket>
                <bucket>&quot;age_92&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#803011'>
              <multibucket>
                <bucket>&quot;age_89&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#823010'>
              <multibucket>
                <bucket>&quot;age_88&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#85300f'>
              <multibucket>
                <bucket>&quot;age_87&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#88300e'>
              <multibucket>
                <bucket>&quot;age_86&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8a300c'>
              <multibucket>
                <bucket>&quot;age_85&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8d300b'>
              <multibucket>
                <bucket>&quot;age_84&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#90310a'>
              <multibucket>
                <bucket>&quot;age_83&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#923109'>
              <multibucket>
                <bucket>&quot;age_82&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#953108'>
              <multibucket>
                <bucket>&quot;age_81&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#983106'>
              <multibucket>
                <bucket>&quot;age_80&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9a3105'>
              <multibucket>
                <bucket>&quot;age_79&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d3104'>
              <multibucket>
                <bucket>&quot;age_78&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9f3103'>
              <multibucket>
                <bucket>&quot;age_77&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a23102'>
              <multibucket>
                <bucket>&quot;age_76&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a53201'>
              <multibucket>
                <bucket>&quot;age_75&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a93401'>
              <multibucket>
                <bucket>&quot;age_74&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ac3501'>
              <multibucket>
                <bucket>&quot;age_73&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b03601'>
              <multibucket>
                <bucket>&quot;age_72&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b33701'>
              <multibucket>
                <bucket>&quot;age_71&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b73801'>
              <multibucket>
                <bucket>&quot;age_70&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba3a01'>
              <multibucket>
                <bucket>&quot;age_69&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bd3b01'>
              <multibucket>
                <bucket>&quot;age_68&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c13c01'>
              <multibucket>
                <bucket>&quot;age_67&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c43d01'>
              <multibucket>
                <bucket>&quot;age_66&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c83e01'>
              <multibucket>
                <bucket>&quot;age_65&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cb4001'>
              <multibucket>
                <bucket>&quot;age_64&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cf4101'>
              <multibucket>
                <bucket>&quot;age_63&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d24201'>
              <multibucket>
                <bucket>&quot;age_62&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d54301'>
              <multibucket>
                <bucket>&quot;age_61&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d84501'>
              <multibucket>
                <bucket>&quot;age_60&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d94702'>
              <multibucket>
                <bucket>&quot;age_59&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#db4903'>
              <multibucket>
                <bucket>&quot;age_58&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dd4b04'>
              <multibucket>
                <bucket>&quot;age_57&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de4e05'>
              <multibucket>
                <bucket>&quot;age_56&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e05006'>
              <multibucket>
                <bucket>&quot;age_55&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15208'>
              <multibucket>
                <bucket>&quot;age_54&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e35409'>
              <multibucket>
                <bucket>&quot;age_53&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e5560a'>
              <multibucket>
                <bucket>&quot;age_52&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e6590b'>
              <multibucket>
                <bucket>&quot;age_51&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e85b0c'>
              <multibucket>
                <bucket>&quot;age_50&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea5d0d'>
              <multibucket>
                <bucket>&quot;age_49&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb5f0e'>
              <multibucket>
                <bucket>&quot;age_48&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed610f'>
              <multibucket>
                <bucket>&quot;age_47&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6310'>
              <multibucket>
                <bucket>&quot;age_46&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f06612'>
              <multibucket>
                <bucket>&quot;age_45&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c091'>
              <multibucket>
                <bucket>&quot;age_1&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c294'>
              <multibucket>
                <bucket>&quot;age_0&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16814'>
              <multibucket>
                <bucket>&quot;age_44&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1be8e'>
              <multibucket>
                <bucket>&quot;age_2&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26a17'>
              <multibucket>
                <bucket>&quot;age_43&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f2bd8b'>
              <multibucket>
                <bucket>&quot;age_3&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36d1a'>
              <multibucket>
                <bucket>&quot;age_42&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36f1c'>
              <multibucket>
                <bucket>&quot;age_41&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f3bb88'>
              <multibucket>
                <bucket>&quot;age_4&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4721f'>
              <multibucket>
                <bucket>&quot;age_40&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4ba85'>
              <multibucket>
                <bucket>&quot;age_5&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f57421'>
              <multibucket>
                <bucket>&quot;age_39&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5b882'>
              <multibucket>
                <bucket>&quot;age_6&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f67624'>
              <multibucket>
                <bucket>&quot;age_38&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b57c'>
              <multibucket>
                <bucket>&quot;age_8&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b77f'>
              <multibucket>
                <bucket>&quot;age_7&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77926'>
              <multibucket>
                <bucket>&quot;age_37&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7b479'>
              <multibucket>
                <bucket>&quot;age_9&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f87b29'>
              <multibucket>
                <bucket>&quot;age_36&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b276'>
              <multibucket>
                <bucket>&quot;age_10&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f97d2c'>
              <multibucket>
                <bucket>&quot;age_35&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9802e'>
              <multibucket>
                <bucket>&quot;age_34&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9b173'>
              <multibucket>
                <bucket>&quot;age_11&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa8231'>
              <multibucket>
                <bucket>&quot;age_33&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#faaf70'>
              <multibucket>
                <bucket>&quot;age_12&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb8533'>
              <multibucket>
                <bucket>&quot;age_32&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fbae6d'>
              <multibucket>
                <bucket>&quot;age_13&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc8736'>
              <multibucket>
                <bucket>&quot;age_31&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcab67'>
              <multibucket>
                <bucket>&quot;age_15&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcac6a'>
              <multibucket>
                <bucket>&quot;age_14&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8939'>
              <multibucket>
                <bucket>&quot;age_30&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8b3c'>
              <multibucket>
                <bucket>&quot;age_29&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8e3f'>
              <multibucket>
                <bucket>&quot;age_28&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9042'>
              <multibucket>
                <bucket>&quot;age_27&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9245'>
              <multibucket>
                <bucket>&quot;age_26&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9448'>
              <multibucket>
                <bucket>&quot;age_25&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd974b'>
              <multibucket>
                <bucket>&quot;age_24&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd994e'>
              <multibucket>
                <bucket>&quot;age_23&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9b51'>
              <multibucket>
                <bucket>&quot;age_22&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9d54'>
              <multibucket>
                <bucket>&quot;age_21&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda058'>
              <multibucket>
                <bucket>&quot;age_20&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda25b'>
              <multibucket>
                <bucket>&quot;age_19&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda45e'>
              <multibucket>
                <bucket>&quot;age_18&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda661'>
              <multibucket>
                <bucket>&quot;age_17&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda964'>
              <multibucket>
                <bucket>&quot;age_16&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#02401b'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
            <map to='#972d15'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:measure:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;households&quot;</bucket>
            <bucket>&quot;hh_income_quartile_1&quot;</bucket>
            <bucket>&quot;hh_income_quartile_2&quot;</bucket>
            <bucket>&quot;hh_income_quartile_3&quot;</bucket>
            <bucket>&quot;hh_income_quartile_4&quot;</bucket>
            <bucket>&quot;hh_size_1&quot;</bucket>
            <bucket>&quot;hh_size_2&quot;</bucket>
            <bucket>&quot;hh_size_3&quot;</bucket>
            <bucket>&quot;hh_size_4_plus&quot;</bucket>
            <bucket>&quot;hh_workers_0&quot;</bucket>
            <bucket>&quot;hh_workers_1&quot;</bucket>
            <bucket>&quot;hh_workers_2&quot;</bucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
            <bucket>&quot;age_00_18&quot;</bucket>
            <bucket>&quot;age_19_64&quot;</bucket>
            <bucket>&quot;age_65_up&quot;</bucket>
            <bucket>&quot;occupation_professional&quot;</bucket>
            <bucket>&quot;occupation_services&quot;</bucket>
            <bucket>&quot;occupation_manual&quot;</bucket>
            <bucket>&quot;occupation_retail&quot;</bucket>
            <bucket>&quot;occupation_management&quot;</bucket>
            <bucket>&quot;occupation_military&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='age.cross vaild.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' max='50000' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='Persons from PUMS' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' field-type='quantitative' max='50000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='Synthesized Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk] + [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='age.cross valid.rmse chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: Percent Root Mean Square Error</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[measure]' derivation='Attribute' name='[attr:measure:nk]' pivot='key' type='nominal' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='Percent Root Mean Square Error' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' palette='tableau-orange-white-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' value='Error'>
              <formatted-text>
                <run>Error</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[attr:measure:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1620'>Measure:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1620'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1620'>&#10;Pct RMSE:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1620'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1620'>&#10;Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1620'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-color' value='#3f6a6e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.check sums'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='320' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.county deep dive'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='31' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='111' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='31' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='148' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='124' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='164' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='100' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk] / ([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]))</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.individual'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Control Statistics: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1004865667122827264]' role='measure' type='quantitative' user:unnamed='controls.individual'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165723889665]' derivation='Avg' name='[avg:Calculation_1021754165723889665:qk]' pivot='key' type='quantitative' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1004865667122827264]' derivation='User' name='[usr:Calculation_1004865667122827264:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='42' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='88' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='320' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</rows>
        <cols />
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='controls.summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' direction='DESC' />
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='117' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='92' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='household controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Household Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of People&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of Workers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Households' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='person controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Person Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2000_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age Category&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Occupation&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Households' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='controls.summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.individual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;hh_size_2&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.check sums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.county deep dive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='household controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='person controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;age_00_18&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='age.cross vaild.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&#10;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='86'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='age.cross valid.rmse chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='controls.summary' width='192'>
      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
      X063Kwq1wSmAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='controls.individual' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='controls.check sums' width='192'>
      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
      g1rQ9tMmwQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='controls.county deep dive' width='192'>
      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
      2lhjYzcOwP8BxA6uTRwpQ1EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='household controls.county.chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='person controls.county.chart' width='192'>
      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
      Wljf3RAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='age.cross vaild.chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='age.cross valid.rmse chart' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>

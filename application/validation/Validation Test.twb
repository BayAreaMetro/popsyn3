<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='year_2005_test_00' inline='true' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' version='9.3'>
      <connection class='textscan' directory='C:/Users/dory/Documents/GitHub/popsyn3/application/validation' filename='year_2005_test_00.csv' password='' server=''>
        <relation name='year_2005_test_00.csv' table='[year_2005_test_00#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='geography_index' ordinal='0' />
            <column datatype='integer' name='control_households' ordinal='1' />
            <column datatype='string' name='measure' ordinal='2' />
            <column datatype='integer' name='synthesized_households' ordinal='3' />
            <column datatype='string' name='geography' ordinal='4' />
            <column datatype='integer' name='control_persons' ordinal='5' />
            <column datatype='integer' name='synthesized_persons' ordinal='6' />
            <column datatype='string' name='control_category' ordinal='7' />
            <column datatype='string' name='measure_category' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>geography_index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography_index]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>geography_index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[control_households]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>control_households</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_households</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_households]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>synthesized_households</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[control_persons]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>control_persons</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>synthesized_persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[synthesized_persons]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>synthesized_persons</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>control_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[control_category]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>control_category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure_category]</local-name>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias>measure_category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[year_2005_test_00.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' value='Control' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' value='Synthesized' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' value='Total Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' value='Control Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' value='Synthesized Households' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' value='Synthesized Persons' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' value='Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' value='Percent Root Mean Square Error' />
          <alias key='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' value='Pct RMSE' />
        </aliases>
      </column>
      <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
      </column>
      <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
      </column>
      <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
      </column>
      <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
      </column>
      <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
      </column>
      <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
      <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;county&quot;' value='County' />
          <alias key='&quot;maz&quot;' value='MAZ' />
          <alias key='&quot;taz&quot;' value='TAZ' />
        </aliases>
      </column>
      <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
          <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
          <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
          <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
          <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
          <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
          <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
          <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
          <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
          <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
          <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
          <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
          <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
          <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
          <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
          <alias key='&quot;households&quot;' value='Households' />
          <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
          <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
          <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
          <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
          <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
          <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
        </aliases>
      </column>
      <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='CountD' name='[ctd:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='CountD' name='[ctd:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
      <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
      <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
      <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\dory\Documents\GitHub\popsyn3\application\validation\year_2005_test_00.tde' schema='Extract' tablename='Extract' update-time='10/18/2016 09:13:28 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1000925085773357056]' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            <calculation column='[Calculation_1000925085783777281]' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            <calculation column='[Calculation_1015843192260386816]' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            <calculation column='[Calculation_1021754165723889665]' formula='IFNULL([control_households], [control_persons])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='59662' timestamp-start='2016-10-18 21:13:28.059' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085773357056</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Calculation_1000925085773357056]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085773357056</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1106</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>-103439</statistic>
                <statistic aggregation='Max' datatype='integer'>51739</statistic>
                <statistic aggregation='Count' datatype='integer'>54435</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1000925085783777281</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Calculation_1000925085783777281]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000925085783777281</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>989</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10699626721</statistic>
                <statistic aggregation='Count' datatype='integer'>54435</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1021754165723889665</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Calculation_1021754165723889665]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1021754165723889665</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1905</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1275255</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>59662.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>59662.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[control_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_category</remote-alias>
              <ordinal>4</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;controlled&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;not_controlled&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;controlled&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_households</remote-name>
              <remote-type>3</remote-type>
              <local-name>[control_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_households</remote-alias>
              <ordinal>5</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>907</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>238919</statistic>
                <statistic aggregation='Count' datatype='integer'>58609</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>control_persons</remote-name>
              <remote-type>3</remote-type>
              <local-name>[control_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>control_persons</remote-alias>
              <ordinal>6</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1036</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>46</statistic>
                <statistic aggregation='Max' datatype='integer'>1275255</statistic>
                <statistic aggregation='Count' datatype='integer'>1053</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geography]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography</remote-alias>
              <ordinal>7</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;county&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;taz&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography_index</remote-name>
              <remote-type>3</remote-type>
              <local-name>[geography_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geography_index</remote-alias>
              <ordinal>8</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39785</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>835412694.0</statistic>
                <statistic aggregation='Avg' datatype='real'>14002.425228788843</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>39785</statistic>
                <statistic aggregation='Stdev' datatype='real'>12573.235430099261</statistic>
                <statistic aggregation='StdevP' datatype='real'>12573.130059108382</statistic>
                <statistic aggregation='Var' datatype='real'>158086249.18070337</statistic>
                <statistic aggregation='VarP' datatype='real'>158083599.48325473</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>21129387495286.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure</remote-alias>
              <ordinal>9</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>130</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;age_0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>measure_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[measure_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>measure_category</remote-alias>
              <ordinal>10</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Households&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Usual Work Week Hours&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_households</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_households]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_households</remote-alias>
              <ordinal>11</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>904</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>239063</statistic>
                <statistic aggregation='Count' datatype='integer'>53382</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>synthesized_persons</remote-name>
              <remote-type>3</remote-type>
              <local-name>[synthesized_persons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>synthesized_persons</remote-alias>
              <ordinal>12</ordinal>
              <family>year_2005_test_00.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1037</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>48</statistic>
                <statistic aggregation='Max' datatype='integer'>1171816</statistic>
                <statistic aggregation='Count' datatype='integer'>1053</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1015843192260386816</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1015843192260386816]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1015843192260386816</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>13</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>52</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.463907' measure-ordering='alphabetic' measure-percentage='0.536093' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:geography:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;county&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]' type='palette'>
            <map to='#7b3014'>
              <bucket>&quot;age_93&quot;</bucket>
            </map>
            <map to='#7d3012'>
              <bucket>&quot;age_92&quot;</bucket>
            </map>
            <map to='#803011'>
              <bucket>&quot;age_89&quot;</bucket>
            </map>
            <map to='#823010'>
              <bucket>&quot;age_88&quot;</bucket>
            </map>
            <map to='#85300f'>
              <bucket>&quot;age_87&quot;</bucket>
            </map>
            <map to='#88300e'>
              <bucket>&quot;age_86&quot;</bucket>
            </map>
            <map to='#8a300c'>
              <bucket>&quot;age_85&quot;</bucket>
            </map>
            <map to='#8d300b'>
              <bucket>&quot;age_84&quot;</bucket>
            </map>
            <map to='#90310a'>
              <bucket>&quot;age_83&quot;</bucket>
            </map>
            <map to='#923109'>
              <bucket>&quot;age_82&quot;</bucket>
            </map>
            <map to='#953108'>
              <bucket>&quot;age_81&quot;</bucket>
            </map>
            <map to='#983106'>
              <bucket>&quot;age_80&quot;</bucket>
            </map>
            <map to='#9a3105'>
              <bucket>&quot;age_79&quot;</bucket>
            </map>
            <map to='#9d3104'>
              <bucket>&quot;age_78&quot;</bucket>
            </map>
            <map to='#9f3103'>
              <bucket>&quot;age_77&quot;</bucket>
            </map>
            <map to='#a23102'>
              <bucket>&quot;age_76&quot;</bucket>
            </map>
            <map to='#a53201'>
              <bucket>&quot;age_75&quot;</bucket>
            </map>
            <map to='#a93401'>
              <bucket>&quot;age_74&quot;</bucket>
            </map>
            <map to='#ac3501'>
              <bucket>&quot;age_73&quot;</bucket>
            </map>
            <map to='#b03601'>
              <bucket>&quot;age_72&quot;</bucket>
            </map>
            <map to='#b33701'>
              <bucket>&quot;age_71&quot;</bucket>
            </map>
            <map to='#b73801'>
              <bucket>&quot;age_70&quot;</bucket>
            </map>
            <map to='#ba3a01'>
              <bucket>&quot;age_69&quot;</bucket>
            </map>
            <map to='#bd3b01'>
              <bucket>&quot;age_68&quot;</bucket>
            </map>
            <map to='#c13c01'>
              <bucket>&quot;age_67&quot;</bucket>
            </map>
            <map to='#c43d01'>
              <bucket>&quot;age_66&quot;</bucket>
            </map>
            <map to='#c83e01'>
              <bucket>&quot;age_65&quot;</bucket>
            </map>
            <map to='#cb4001'>
              <bucket>&quot;age_64&quot;</bucket>
            </map>
            <map to='#cf4101'>
              <bucket>&quot;age_63&quot;</bucket>
            </map>
            <map to='#d24201'>
              <bucket>&quot;age_62&quot;</bucket>
            </map>
            <map to='#d54301'>
              <bucket>&quot;age_61&quot;</bucket>
            </map>
            <map to='#d84501'>
              <bucket>&quot;age_60&quot;</bucket>
            </map>
            <map to='#d94702'>
              <bucket>&quot;age_59&quot;</bucket>
            </map>
            <map to='#db4903'>
              <bucket>&quot;age_58&quot;</bucket>
            </map>
            <map to='#dd4b04'>
              <bucket>&quot;age_57&quot;</bucket>
            </map>
            <map to='#de4e05'>
              <bucket>&quot;age_56&quot;</bucket>
            </map>
            <map to='#e05006'>
              <bucket>&quot;age_55&quot;</bucket>
            </map>
            <map to='#e15208'>
              <bucket>&quot;age_54&quot;</bucket>
            </map>
            <map to='#e35409'>
              <bucket>&quot;age_53&quot;</bucket>
            </map>
            <map to='#e5560a'>
              <bucket>&quot;age_52&quot;</bucket>
            </map>
            <map to='#e6590b'>
              <bucket>&quot;age_51&quot;</bucket>
            </map>
            <map to='#e85b0c'>
              <bucket>&quot;age_50&quot;</bucket>
            </map>
            <map to='#ea5d0d'>
              <bucket>&quot;age_49&quot;</bucket>
            </map>
            <map to='#eb5f0e'>
              <bucket>&quot;age_48&quot;</bucket>
            </map>
            <map to='#ed610f'>
              <bucket>&quot;age_47&quot;</bucket>
            </map>
            <map to='#ef6310'>
              <bucket>&quot;age_46&quot;</bucket>
            </map>
            <map to='#f06612'>
              <bucket>&quot;age_45&quot;</bucket>
            </map>
            <map to='#f0c091'>
              <bucket>&quot;age_1&quot;</bucket>
            </map>
            <map to='#f0c294'>
              <bucket>&quot;age_0&quot;</bucket>
            </map>
            <map to='#f16814'>
              <bucket>&quot;age_44&quot;</bucket>
            </map>
            <map to='#f1be8e'>
              <bucket>&quot;age_2&quot;</bucket>
            </map>
            <map to='#f26a17'>
              <bucket>&quot;age_43&quot;</bucket>
            </map>
            <map to='#f2bd8b'>
              <bucket>&quot;age_3&quot;</bucket>
            </map>
            <map to='#f36d1a'>
              <bucket>&quot;age_42&quot;</bucket>
            </map>
            <map to='#f36f1c'>
              <bucket>&quot;age_41&quot;</bucket>
            </map>
            <map to='#f3bb88'>
              <bucket>&quot;age_4&quot;</bucket>
            </map>
            <map to='#f4721f'>
              <bucket>&quot;age_40&quot;</bucket>
            </map>
            <map to='#f4ba85'>
              <bucket>&quot;age_5&quot;</bucket>
            </map>
            <map to='#f57421'>
              <bucket>&quot;age_39&quot;</bucket>
            </map>
            <map to='#f5b882'>
              <bucket>&quot;age_6&quot;</bucket>
            </map>
            <map to='#f67624'>
              <bucket>&quot;age_38&quot;</bucket>
            </map>
            <map to='#f6b57c'>
              <bucket>&quot;age_8&quot;</bucket>
            </map>
            <map to='#f6b77f'>
              <bucket>&quot;age_7&quot;</bucket>
            </map>
            <map to='#f77926'>
              <bucket>&quot;age_37&quot;</bucket>
            </map>
            <map to='#f7b479'>
              <bucket>&quot;age_9&quot;</bucket>
            </map>
            <map to='#f87b29'>
              <bucket>&quot;age_36&quot;</bucket>
            </map>
            <map to='#f8b276'>
              <bucket>&quot;age_10&quot;</bucket>
            </map>
            <map to='#f97d2c'>
              <bucket>&quot;age_35&quot;</bucket>
            </map>
            <map to='#f9802e'>
              <bucket>&quot;age_34&quot;</bucket>
            </map>
            <map to='#f9b173'>
              <bucket>&quot;age_11&quot;</bucket>
            </map>
            <map to='#fa8231'>
              <bucket>&quot;age_33&quot;</bucket>
            </map>
            <map to='#faaf70'>
              <bucket>&quot;age_12&quot;</bucket>
            </map>
            <map to='#fb8533'>
              <bucket>&quot;age_32&quot;</bucket>
            </map>
            <map to='#fbae6d'>
              <bucket>&quot;age_13&quot;</bucket>
            </map>
            <map to='#fc8736'>
              <bucket>&quot;age_31&quot;</bucket>
            </map>
            <map to='#fcab67'>
              <bucket>&quot;age_15&quot;</bucket>
            </map>
            <map to='#fcac6a'>
              <bucket>&quot;age_14&quot;</bucket>
            </map>
            <map to='#fd8939'>
              <bucket>&quot;age_30&quot;</bucket>
            </map>
            <map to='#fd8b3c'>
              <bucket>&quot;age_29&quot;</bucket>
            </map>
            <map to='#fd8e3f'>
              <bucket>&quot;age_28&quot;</bucket>
            </map>
            <map to='#fd9042'>
              <bucket>&quot;age_27&quot;</bucket>
            </map>
            <map to='#fd9245'>
              <bucket>&quot;age_26&quot;</bucket>
            </map>
            <map to='#fd9448'>
              <bucket>&quot;age_25&quot;</bucket>
            </map>
            <map to='#fd974b'>
              <bucket>&quot;age_24&quot;</bucket>
            </map>
            <map to='#fd994e'>
              <bucket>&quot;age_23&quot;</bucket>
            </map>
            <map to='#fd9b51'>
              <bucket>&quot;age_22&quot;</bucket>
            </map>
            <map to='#fd9d54'>
              <bucket>&quot;age_21&quot;</bucket>
            </map>
            <map to='#fda058'>
              <bucket>&quot;age_20&quot;</bucket>
            </map>
            <map to='#fda25b'>
              <bucket>&quot;age_19&quot;</bucket>
            </map>
            <map to='#fda45e'>
              <bucket>&quot;age_18&quot;</bucket>
            </map>
            <map to='#fda661'>
              <bucket>&quot;age_17&quot;</bucket>
            </map>
            <map to='#fda964'>
              <bucket>&quot;age_16&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#798e87'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#798e87'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
            <map to='#a2a475'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
            </map>
            <map to='#c27d38'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#c27d38'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[ctd:synthesized_persons:qk]&quot;</bucket>
            </map>
            <map to='#d8b70a'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:measure:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#7b3014'>
              <multibucket>
                <bucket>&quot;age_93&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7d3012'>
              <multibucket>
                <bucket>&quot;age_92&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#7f7f7f'>
              <multibucket>
                <bucket>&quot;Hispanic&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#803011'>
              <multibucket>
                <bucket>&quot;age_89&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#823010'>
              <multibucket>
                <bucket>&quot;age_88&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#85300f'>
              <multibucket>
                <bucket>&quot;age_87&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#88300e'>
              <multibucket>
                <bucket>&quot;age_86&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8a300c'>
              <multibucket>
                <bucket>&quot;age_85&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8d300b'>
              <multibucket>
                <bucket>&quot;age_84&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#90310a'>
              <multibucket>
                <bucket>&quot;age_83&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#923109'>
              <multibucket>
                <bucket>&quot;age_82&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#953108'>
              <multibucket>
                <bucket>&quot;age_81&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#983106'>
              <multibucket>
                <bucket>&quot;age_80&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9a3105'>
              <multibucket>
                <bucket>&quot;age_79&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d3104'>
              <multibucket>
                <bucket>&quot;age_78&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9f3103'>
              <multibucket>
                <bucket>&quot;age_77&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a23102'>
              <multibucket>
                <bucket>&quot;age_76&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a53201'>
              <multibucket>
                <bucket>&quot;age_75&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a93401'>
              <multibucket>
                <bucket>&quot;age_74&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ac3501'>
              <multibucket>
                <bucket>&quot;age_73&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b03601'>
              <multibucket>
                <bucket>&quot;age_72&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b33701'>
              <multibucket>
                <bucket>&quot;age_71&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b73801'>
              <multibucket>
                <bucket>&quot;age_70&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba3a01'>
              <multibucket>
                <bucket>&quot;age_69&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bcbd22'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bd3b01'>
              <multibucket>
                <bucket>&quot;age_68&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c13c01'>
              <multibucket>
                <bucket>&quot;age_67&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c43d01'>
              <multibucket>
                <bucket>&quot;age_66&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c7c7c7'>
              <multibucket>
                <bucket>&quot;Other&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c83e01'>
              <multibucket>
                <bucket>&quot;age_65&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cb4001'>
              <multibucket>
                <bucket>&quot;age_64&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cf4101'>
              <multibucket>
                <bucket>&quot;age_63&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d24201'>
              <multibucket>
                <bucket>&quot;age_62&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d54301'>
              <multibucket>
                <bucket>&quot;age_61&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d84501'>
              <multibucket>
                <bucket>&quot;age_60&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d94702'>
              <multibucket>
                <bucket>&quot;age_59&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#db4903'>
              <multibucket>
                <bucket>&quot;age_58&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dd4b04'>
              <multibucket>
                <bucket>&quot;age_57&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de4e05'>
              <multibucket>
                <bucket>&quot;age_56&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e05006'>
              <multibucket>
                <bucket>&quot;age_55&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15208'>
              <multibucket>
                <bucket>&quot;age_54&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e35409'>
              <multibucket>
                <bucket>&quot;age_53&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e377c2'>
              <multibucket>
                <bucket>&quot;Asian&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e5560a'>
              <multibucket>
                <bucket>&quot;age_52&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e6590b'>
              <multibucket>
                <bucket>&quot;age_51&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e85b0c'>
              <multibucket>
                <bucket>&quot;age_50&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea5d0d'>
              <multibucket>
                <bucket>&quot;age_49&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb5f0e'>
              <multibucket>
                <bucket>&quot;age_48&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ed610f'>
              <multibucket>
                <bucket>&quot;age_47&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6310'>
              <multibucket>
                <bucket>&quot;age_46&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f06612'>
              <multibucket>
                <bucket>&quot;age_45&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c091'>
              <multibucket>
                <bucket>&quot;age_1&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f0c294'>
              <multibucket>
                <bucket>&quot;age_0&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16814'>
              <multibucket>
                <bucket>&quot;age_44&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1be8e'>
              <multibucket>
                <bucket>&quot;age_2&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26a17'>
              <multibucket>
                <bucket>&quot;age_43&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f2bd8b'>
              <multibucket>
                <bucket>&quot;age_3&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36d1a'>
              <multibucket>
                <bucket>&quot;age_42&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f36f1c'>
              <multibucket>
                <bucket>&quot;age_41&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f3bb88'>
              <multibucket>
                <bucket>&quot;age_4&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4721f'>
              <multibucket>
                <bucket>&quot;age_40&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4ba85'>
              <multibucket>
                <bucket>&quot;age_5&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f57421'>
              <multibucket>
                <bucket>&quot;age_39&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f5b882'>
              <multibucket>
                <bucket>&quot;age_6&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f67624'>
              <multibucket>
                <bucket>&quot;age_38&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b57c'>
              <multibucket>
                <bucket>&quot;age_8&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6b77f'>
              <multibucket>
                <bucket>&quot;age_7&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f77926'>
              <multibucket>
                <bucket>&quot;age_37&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7b479'>
              <multibucket>
                <bucket>&quot;age_9&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f7b6d2'>
              <multibucket>
                <bucket>&quot;Black&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f87b29'>
              <multibucket>
                <bucket>&quot;age_36&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8b276'>
              <multibucket>
                <bucket>&quot;age_10&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f97d2c'>
              <multibucket>
                <bucket>&quot;age_35&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9802e'>
              <multibucket>
                <bucket>&quot;age_34&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9b173'>
              <multibucket>
                <bucket>&quot;age_11&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa8231'>
              <multibucket>
                <bucket>&quot;age_33&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#faaf70'>
              <multibucket>
                <bucket>&quot;age_12&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fb8533'>
              <multibucket>
                <bucket>&quot;age_32&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fbae6d'>
              <multibucket>
                <bucket>&quot;age_13&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc8736'>
              <multibucket>
                <bucket>&quot;age_31&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcab67'>
              <multibucket>
                <bucket>&quot;age_15&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fcac6a'>
              <multibucket>
                <bucket>&quot;age_14&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8939'>
              <multibucket>
                <bucket>&quot;age_30&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8b3c'>
              <multibucket>
                <bucket>&quot;age_29&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd8e3f'>
              <multibucket>
                <bucket>&quot;age_28&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9042'>
              <multibucket>
                <bucket>&quot;age_27&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9245'>
              <multibucket>
                <bucket>&quot;age_26&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9448'>
              <multibucket>
                <bucket>&quot;age_25&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd974b'>
              <multibucket>
                <bucket>&quot;age_24&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd994e'>
              <multibucket>
                <bucket>&quot;age_23&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9b51'>
              <multibucket>
                <bucket>&quot;age_22&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd9d54'>
              <multibucket>
                <bucket>&quot;age_21&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda058'>
              <multibucket>
                <bucket>&quot;age_20&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda25b'>
              <multibucket>
                <bucket>&quot;age_19&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda45e'>
              <multibucket>
                <bucket>&quot;age_18&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda661'>
              <multibucket>
                <bucket>&quot;age_17&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fda964'>
              <multibucket>
                <bucket>&quot;age_16&quot;</bucket>
                <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_1015843192260386816:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Alameda&quot;</bucket>
            <bucket>&quot;Contra Costa&quot;</bucket>
            <bucket>&quot;Marin&quot;</bucket>
            <bucket>&quot;Napa&quot;</bucket>
            <bucket>&quot;San Francisco&quot;</bucket>
            <bucket>&quot;San Mateo&quot;</bucket>
            <bucket>&quot;Santa Clara&quot;</bucket>
            <bucket>&quot;Solano&quot;</bucket>
            <bucket>&quot;Sonoma&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:measure:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;households&quot;</bucket>
            <bucket>&quot;hh_income_quartile_1&quot;</bucket>
            <bucket>&quot;hh_income_quartile_2&quot;</bucket>
            <bucket>&quot;hh_income_quartile_3&quot;</bucket>
            <bucket>&quot;hh_income_quartile_4&quot;</bucket>
            <bucket>&quot;hh_size_1&quot;</bucket>
            <bucket>&quot;hh_size_2&quot;</bucket>
            <bucket>&quot;hh_size_3&quot;</bucket>
            <bucket>&quot;hh_size_4_plus&quot;</bucket>
            <bucket>&quot;hh_workers_0&quot;</bucket>
            <bucket>&quot;hh_workers_1&quot;</bucket>
            <bucket>&quot;hh_workers_2&quot;</bucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
            <bucket>&quot;age_00_18&quot;</bucket>
            <bucket>&quot;age_19_64&quot;</bucket>
            <bucket>&quot;age_65_up&quot;</bucket>
            <bucket>&quot;occupation_professional&quot;</bucket>
            <bucket>&quot;occupation_services&quot;</bucket>
            <bucket>&quot;occupation_manual&quot;</bucket>
            <bucket>&quot;occupation_retail&quot;</bucket>
            <bucket>&quot;occupation_management&quot;</bucket>
            <bucket>&quot;occupation_military&quot;</bucket>
            <bucket>&quot;age_0&quot;</bucket>
            <bucket>&quot;age_1&quot;</bucket>
            <bucket>&quot;age_2&quot;</bucket>
            <bucket>&quot;age_3&quot;</bucket>
            <bucket>&quot;age_4&quot;</bucket>
            <bucket>&quot;age_5&quot;</bucket>
            <bucket>&quot;age_6&quot;</bucket>
            <bucket>&quot;age_7&quot;</bucket>
            <bucket>&quot;age_8&quot;</bucket>
            <bucket>&quot;age_9&quot;</bucket>
            <bucket>&quot;age_10&quot;</bucket>
            <bucket>&quot;age_11&quot;</bucket>
            <bucket>&quot;age_12&quot;</bucket>
            <bucket>&quot;age_13&quot;</bucket>
            <bucket>&quot;age_14&quot;</bucket>
            <bucket>&quot;age_15&quot;</bucket>
            <bucket>&quot;age_16&quot;</bucket>
            <bucket>&quot;age_17&quot;</bucket>
            <bucket>&quot;age_18&quot;</bucket>
            <bucket>&quot;age_19&quot;</bucket>
            <bucket>&quot;age_20&quot;</bucket>
            <bucket>&quot;age_21&quot;</bucket>
            <bucket>&quot;age_22&quot;</bucket>
            <bucket>&quot;age_23&quot;</bucket>
            <bucket>&quot;age_24&quot;</bucket>
            <bucket>&quot;age_25&quot;</bucket>
            <bucket>&quot;age_26&quot;</bucket>
            <bucket>&quot;age_27&quot;</bucket>
            <bucket>&quot;age_28&quot;</bucket>
            <bucket>&quot;age_29&quot;</bucket>
            <bucket>&quot;age_30&quot;</bucket>
            <bucket>&quot;age_31&quot;</bucket>
            <bucket>&quot;age_32&quot;</bucket>
            <bucket>&quot;age_33&quot;</bucket>
            <bucket>&quot;age_34&quot;</bucket>
            <bucket>&quot;age_35&quot;</bucket>
            <bucket>&quot;age_36&quot;</bucket>
            <bucket>&quot;age_37&quot;</bucket>
            <bucket>&quot;age_38&quot;</bucket>
            <bucket>&quot;age_39&quot;</bucket>
            <bucket>&quot;age_40&quot;</bucket>
            <bucket>&quot;age_41&quot;</bucket>
            <bucket>&quot;age_42&quot;</bucket>
            <bucket>&quot;age_43&quot;</bucket>
            <bucket>&quot;age_44&quot;</bucket>
            <bucket>&quot;age_45&quot;</bucket>
            <bucket>&quot;age_46&quot;</bucket>
            <bucket>&quot;age_47&quot;</bucket>
            <bucket>&quot;age_48&quot;</bucket>
            <bucket>&quot;age_49&quot;</bucket>
            <bucket>&quot;age_50&quot;</bucket>
            <bucket>&quot;age_51&quot;</bucket>
            <bucket>&quot;age_52&quot;</bucket>
            <bucket>&quot;age_53&quot;</bucket>
            <bucket>&quot;age_54&quot;</bucket>
            <bucket>&quot;age_55&quot;</bucket>
            <bucket>&quot;age_56&quot;</bucket>
            <bucket>&quot;age_57&quot;</bucket>
            <bucket>&quot;age_58&quot;</bucket>
            <bucket>&quot;age_59&quot;</bucket>
            <bucket>&quot;age_60&quot;</bucket>
            <bucket>&quot;age_61&quot;</bucket>
            <bucket>&quot;age_62&quot;</bucket>
            <bucket>&quot;age_63&quot;</bucket>
            <bucket>&quot;age_64&quot;</bucket>
            <bucket>&quot;age_65&quot;</bucket>
            <bucket>&quot;age_66&quot;</bucket>
            <bucket>&quot;age_67&quot;</bucket>
            <bucket>&quot;age_68&quot;</bucket>
            <bucket>&quot;age_69&quot;</bucket>
            <bucket>&quot;age_70&quot;</bucket>
            <bucket>&quot;age_71&quot;</bucket>
            <bucket>&quot;age_72&quot;</bucket>
            <bucket>&quot;age_73&quot;</bucket>
            <bucket>&quot;age_74&quot;</bucket>
            <bucket>&quot;age_75&quot;</bucket>
            <bucket>&quot;age_76&quot;</bucket>
            <bucket>&quot;age_77&quot;</bucket>
            <bucket>&quot;age_78&quot;</bucket>
            <bucket>&quot;age_79&quot;</bucket>
            <bucket>&quot;age_80&quot;</bucket>
            <bucket>&quot;age_81&quot;</bucket>
            <bucket>&quot;age_82&quot;</bucket>
            <bucket>&quot;age_83&quot;</bucket>
            <bucket>&quot;age_84&quot;</bucket>
            <bucket>&quot;age_85&quot;</bucket>
            <bucket>&quot;age_86&quot;</bucket>
            <bucket>&quot;age_87&quot;</bucket>
            <bucket>&quot;age_88&quot;</bucket>
            <bucket>&quot;age_89&quot;</bucket>
            <bucket>&quot;age_92&quot;</bucket>
            <bucket>&quot;age_93&quot;</bucket>
            <bucket>&quot;Non-worker&quot;</bucket>
            <bucket>&quot;Less than 9 hours&quot;</bucket>
            <bucket>&quot;Between 8 and 17 hours&quot;</bucket>
            <bucket>&quot;Between 16 and 25 hours&quot;</bucket>
            <bucket>&quot;Between 24 and 33 hours&quot;</bucket>
            <bucket>&quot;Between 33 and 41 hours&quot;</bucket>
            <bucket>&quot;Between 40 and 61 hours&quot;</bucket>
            <bucket>&quot;More than 60 hours&quot;</bucket>
            <bucket>&quot;White&quot;</bucket>
            <bucket>&quot;Hispanic&quot;</bucket>
            <bucket>&quot;Asian&quot;</bucket>
            <bucket>&quot;Black&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;Less than 21 hours&quot;</bucket>
            <bucket>&quot;Between 21 and 35 hours&quot;</bucket>
            <bucket>&quot;Between 35 and 46 hours&quot;</bucket>
            <bucket>&quot;More than 46 hours&quot;</bucket>
            <bucket>&quot;Non-student&quot;</bucket>
            <bucket>&quot;Preschool&quot;</bucket>
            <bucket>&quot;Grade School&quot;</bucket>
            <bucket>&quot;Middle School&quot;</bucket>
            <bucket>&quot;High School&quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='age.cross vaild.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' max='50000' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='Persons from PUMS' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' field-type='quantitative' max='50000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='Synthesized Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Age:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;PUMS:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk] + [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='age.cross valid.rmse chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Age Cross-Validation: Percent Root Mean Square Error</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[measure]' derivation='Attribute' name='[attr:measure:nk]' pivot='key' type='nominal' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1015843192260386816:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='Percent Root Mean Square Error' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='false' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' palette='tableau-orange-white-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' value='Error'>
              <formatted-text>
                <run>Error</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[attr:measure:nk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>Measure:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1800'>&#10;Pct RMSE:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1800'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1620'>Æ&#10;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1620'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-color' value='#3f6a6e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.check sums'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='320' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='72' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.county deep dive'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='74' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='31' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='111' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='31' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='148' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='124' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]' value='164' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]' value='100' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk] / ([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]))</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='controls.individual'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Control Statistics: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1004865667122827264]' role='measure' type='quantitative' user:unnamed='controls.individual'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165723889665]' derivation='Avg' name='[avg:Calculation_1021754165723889665:qk]' pivot='key' type='quantitative' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1004865667122827264]' derivation='User' name='[usr:Calculation_1004865667122827264:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1021754165723889665:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='136' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='42' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1004865667122827264:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='88' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='320' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</rows>
        <cols />
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='controls.summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Avg' name='[avg:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1000925085783920642]' derivation='User' name='[usr:Calculation_1000925085783920642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[avg:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1000925085783920642:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' direction='DESC' />
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='54' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='117' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='392' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='92' />
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk])</rows>
        <cols>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='hours work.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Usual Hours Worked Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Usual Work Week Hours&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='household controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Household Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of People&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Households by Number of Workers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Households' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='person controls.county.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>County Person Controls: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Age Category&quot;' />
              <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Persons by Occupation&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='233' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='race eth.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Race/Ethnicity Cross-Validation: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Race Ethnicity&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <lod column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='student.cross valid.chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Persons by Student Status: </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontsize='20' italic='true'>County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='year_2005_test_00' name='textscan.1xanw0j0w61gh80zu3baj0rtv7sd' />
          </datasources>
          <datasource-dependencies datasource='textscan.1xanw0j0w61gh80zu3baj0rtv7sd'>
            <column caption='Error' datatype='integer' name='[Calculation_1000925085773357056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([synthesized_households]-[control_households], [synthesized_persons]-[control_persons])' />
            </column>
            <column caption='Error Squared' datatype='integer' name='[Calculation_1000925085783777281]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085773357056]*[Calculation_1000925085773357056]' />
            </column>
            <column caption='Root Mean Square Error' datatype='real' name='[Calculation_1000925085783920642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_1000925085783777281]))' />
            </column>
            <column caption='County Name' datatype='string' name='[Calculation_1015843192260386816]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([geography]==&quot;county&quot; and [geography_index]==1) then &quot;San Francisco&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==2) then &quot;San Mateo&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==3) then &quot;Santa Clara&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==4) then &quot;Alameda&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==5) then &quot;Contra Costa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==6) then &quot;Solano&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==7) then &quot;Napa&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==8) then &quot;Sonoma&quot;&#13;&#10;ELSEIF([geography]==&quot;county&quot; and [geography_index]==9) then &quot;Marin&quot;&#13;&#10;ELSE &quot;Error&quot;&#13;&#10;END' />
            </column>
            <column caption='Relevant Control' datatype='integer' name='[Calculation_1021754165723889665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL([control_households], [control_persons])' />
            </column>
            <column caption='[Root Mean Square Error]/avg([Relevant Control])' datatype='real' name='[Calculation_1021754165724004354]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1000925085783920642]/avg([Calculation_1021754165723889665])' />
            </column>
            <column caption='Control Category' datatype='string' name='[control_category]' role='dimension' type='nominal' />
            <column caption='Control Households' datatype='integer' name='[control_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Control Persons' datatype='integer' name='[control_persons]' role='measure' type='quantitative' />
            <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;county&quot;' value='County' />
                <alias key='&quot;maz&quot;' value='MAZ' />
                <alias key='&quot;taz&quot;' value='TAZ' />
              </aliases>
            </column>
            <column caption='Geography Index' datatype='integer' name='[geography_index]' role='dimension' type='ordinal' />
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;age_00_18&quot;' value='Persons under age 18' />
                <alias key='&quot;age_19_64&quot;' value='Persons age 19 to 64' />
                <alias key='&quot;age_65_up&quot;' value='Persons age 65 and older' />
                <alias key='&quot;hh_income_quartile_1&quot;' value='Households in Lowest Income Quartile' />
                <alias key='&quot;hh_income_quartile_2&quot;' value='Households in Medium Low Income Quartile' />
                <alias key='&quot;hh_income_quartile_3&quot;' value='Households in Medium High Income Quartile' />
                <alias key='&quot;hh_income_quartile_4&quot;' value='Households in Highest Income Quartile' />
                <alias key='&quot;hh_size_1&quot;' value='Households with 1 Person' />
                <alias key='&quot;hh_size_2&quot;' value='Households with 2 People' />
                <alias key='&quot;hh_size_3&quot;' value='Households with 3 People' />
                <alias key='&quot;hh_size_4_plus&quot;' value='Households with 4 or more People' />
                <alias key='&quot;hh_workers_0&quot;' value='Households with 0 Workers' />
                <alias key='&quot;hh_workers_1&quot;' value='Households with 1 Worker' />
                <alias key='&quot;hh_workers_2&quot;' value='Households with 2 Workers' />
                <alias key='&quot;hh_workers_3_plus&quot;' value='Households with 3 or more Workers' />
                <alias key='&quot;households&quot;' value='Households' />
                <alias key='&quot;occupation_management&quot;' value='Persons in Management Occupations' />
                <alias key='&quot;occupation_manual&quot;' value='Persons in Manual Occupations' />
                <alias key='&quot;occupation_military&quot;' value='Persons in Military Occupations' />
                <alias key='&quot;occupation_professional&quot;' value='Persons in Professional Occupations' />
                <alias key='&quot;occupation_retail&quot;' value='Persons in Retail Occupations' />
                <alias key='&quot;occupation_services&quot;' value='Persons in Service Occupations' />
              </aliases>
            </column>
            <column caption='Measure Category' datatype='string' name='[measure_category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1015843192260386816]' derivation='None' name='[none:Calculation_1015843192260386816:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_category]' derivation='None' name='[none:control_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography]' derivation='None' name='[none:geography:nk]' pivot='key' type='nominal' />
            <column-instance column='[geography_index]' derivation='None' name='[none:geography_index:ok]' pivot='key' type='ordinal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure_category]' derivation='None' name='[none:measure_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[control_persons]' derivation='Sum' name='[pcto:sum:control_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[pcto:sum:synthesized_persons:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1000925085773357056]' derivation='Sum' name='[sum:Calculation_1000925085773357056:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_households]' derivation='Sum' name='[sum:control_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[control_persons]' derivation='Sum' name='[sum:control_persons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_households]' derivation='Sum' name='[sum:synthesized_households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[synthesized_persons]' derivation='Sum' name='[sum:synthesized_persons:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Households' datatype='integer' name='[synthesized_households]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Synthesized Persons' datatype='integer' name='[synthesized_persons]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021754165724004354]' derivation='User' name='[usr:Calculation_1021754165724004354:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:control_persons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[pcto:sum:synthesized_persons:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_households:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]'>
            <groupfilter function='member' level='[none:control_category:nk]' member='&quot;not_controlled&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]'>
            <groupfilter function='member' level='[none:geography:nk]' member='&quot;county&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]'>
            <groupfilter function='level-members' level='[none:geography_index:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]'>
            <groupfilter function='member' level='[none:measure_category:nk]' member='&quot;Student Status&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</column>
            <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='121' />
            <format attr='title' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='Share of Persons / Percent RMSE' />
            <format attr='subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='67' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' value='56' />
            <format attr='height' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Source Sans Pro' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]' />
              <tooltip column='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>Synthesized:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:synthesized_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Control:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:control_persons:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Total Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Source Sans Pro' fontsize='16' indent='1890'>&#10;Percent Error:&#9;</run>
                <run bold='true' fontname='Source Sans Pro' fontsize='16' indent='1890'>&lt;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[usr:Calculation_1021754165724004354:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[Multiple Values]</rows>
        <cols>([textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk] / [textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names])</cols>
        <pages>
          <column>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='controls.summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.individual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='89'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;hh_size_2&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.check sums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='controls.county deep dive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='household controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;hh_workers_3_plus&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='person controls.county.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;age_19_64&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='race eth.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Alameda&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='hours work.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Alameda&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='student.cross valid.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='78'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;San Mateo&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='age.cross vaild.chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card playctrls='0' trailctrls='0' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]&#10;[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='86'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;San Francisco&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography_index:ok]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='age.cross valid.rmse chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[sum:Calculation_1000925085773357056:qk]' type='color' />
            <card param='[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='83'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[:Measure Names]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1006835991952629766:qk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:Calculation_1015843192260386816:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:control_category:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:geography:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure:nk]</field>
            <field>[textscan.1xanw0j0w61gh80zu3baj0rtv7sd].[none:measure_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='controls.summary' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='controls.individual' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='controls.check sums' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='controls.county deep dive' width='192'>
      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
      0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='household controls.county.chart' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='person controls.county.chart' width='192'>
      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
      h/j/PIyA6ggsJ2MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='race eth.cross valid.chart' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='hours work.cross valid.chart' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='student.cross valid.chart' width='192'>
      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
      tJhUqQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='age.cross vaild.chart' width='192'>
      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
      lP4/nkgro/NKED0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='age.cross valid.rmse chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAASFklEQVR4nO3dSXMb+XnH8W9jaWwkuAEQd3GVKGpGG6UZO07FY8dOUjlkqVR8yNGvxG8h
      Fx/8Cnxw5egpp1LjeDIeSSNK1Ghk7SRBUlxAEiCxEEAD3f3PARx6JGA8gkQ2QfbzuYhgg+wH
      VP96/T/dmlJKIYRL+ZyYiWRMtCpHAlAsFtE0zYlZCdEURwKgaRrhcNiJWQnRlDcKgFKKu7f+
      wPmZjyim5kkbOmO9bfzpySKT0+8RDflJzj+lrAL4rCL5ikZfV5iO3mFCfs9RfwYh3tobLZ2a
      phHVNQoViPcNkU695P7cAy68d44HXz7AtiqspHbIri+TKpQxy1kWk0s8fzFPpVLBMIyj/hxC
      vJW3Xj17NA3btkHzUDvGre3jT5+fwOvxUvWH8ZYK2LpOIBA4pHKFOFxvtgtkVymaftheB28Z
      n9fDhYuXefZ4nkvvT7GwtMZwbzeGFqSrLUp1eJSwH5KpHEGgeMQfQoi3pTlxHaBYLMpBsGhJ
      coQqXE0CIFzNkesA4t3Zto1tVgHw+vxoHll3HQb5K54Q87f+l198OMgvPhzk5Z/mjrucU0MC
      IFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFztjVsiZ//4e87f+BHZtXnS
      hQrnziZ49GyJ8an36IrozD97TBkdv1U6aIns6h+RlkjR0t64JbIj5GWvolhcWafN2uW3f7jP
      9PtTPHxQa4lc286xl1pla6+CWc6xuLTM02fPpSVStLTmVs/7dzYxLZug7qVareDx+jBNC5TC
      Bt6fPkdA11GBNnzlorREipb2xi2RJRVES6eYmhwhXajyd9NxHj9d5PKlKVbXtxgdSmAQIBpu
      Y3C/JXJpU1oiRWt7owBoHj+Xr3948Dqx/+/lK5cAaBsdfuX9sVgPABc6eg6hRCGOjhyhCleT
      AAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFc79LtDm1WD
      qqUR8HtQmhevRx6PKlpXcwFQitkvbmKYGmcHeljeSNM7OMnoQDezt25iKD/hgIZhQiwaZvjc
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
